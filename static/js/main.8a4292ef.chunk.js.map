{"version":3,"sources":["02-Features/04-Profile/Profile.module.scss","03-Components/NavBar/NavBar.module.css","assets/css/container.module.css","02-Features/00-Header/Header.module.scss","02-Features/05-CardPacks/CardPaksElement/CardPacksElement.module.css","02-Features/05-CardPacks/CardPacks.module.css","02-Features/04-Profile/FileInput.module.scss","03-Components/Modal/Modal.module.css","02-Features/08-Page404/Page404.module.css","03-Components/ErrorSnackBar/ErrorSnackBar.module.css","02-Features/01-Login/Login.module.css","03-Components/InputText/InputText.module.css","03-Components/SendingForm/SendingForm.module.css","03-Components/Paginator/Paginator.module.css","02-Features/06-Cards/Cards.module.css","03-Components/Button/FormButton/UniversalButton.module.css","03-Components/Checkbox/CheckBox.module.css","03-Components/Preloader/Preloader.module.css","02-Features/01-Login/logout/Logout.module.css","03-Components/Button/Button.module.css","02-Features/06-Cards/CardElement/CardElement.module.css","02-Features/07-Learning/LearningPage.module.css","00-App/Routes/Routes.module.css","01-API/api.ts","01-API/00-login-api.ts","00-App/app-reducer.ts","02-Features/01-Login/auth-reducer.ts","02-Features/01-Login/logout/Logout.tsx","02-Features/01-Login/01-selectors.ts","02-Features/04-Profile/FileInput.tsx","03-Components/Button/Button.tsx","02-Features/04-Profile/Profile.tsx","03-Components/Button/FormButton/UniversalButton.tsx","03-Components/InputText/InputText.tsx","03-Components/Checkbox/CheckBox.tsx","00-App/01-selectors.ts","02-Features/01-Login/Login.tsx","01-API/01-regestration-api.ts","02-Features/02-Registration/registration-reducer.ts","02-Features/02-Registration/Registration.tsx","03-Components/SendingForm/SendingForm.tsx","01-API/02-password-api.ts","02-Features/03-PasswordRecovery/ResetPassword.tsx","02-Features/03-PasswordRecovery/resetPassword-thunks.ts","02-Features/03-PasswordRecovery/PasswordRecovery.tsx","01-API/03-cardPacks-api.ts","02-Features/05-CardPacks/cardPacks-reducer.ts","03-Components/Paginator/Paginator.tsx","03-Components/DoubleRange/DoubleRange.tsx","03-Components/Modal/Modal.tsx","03-Components/Modal/ModalForPack/ModalForAddPack.tsx","03-Components/Modal/ModalForCards/ModalForUpdateCardsPack.tsx","03-Components/Modal/ModalForCards/ModalForDelete.tsx","02-Features/05-CardPacks/CardPaksElement/CardPacksElement.tsx","02-Features/05-CardPacks/01-selectors.ts","02-Features/05-CardPacks/CardPacks.tsx","01-API/04-cards-api.ts","02-Features/06-Cards/cards-reducer.ts","03-Components/Modal/ModalForCards/ModalForAddCard.tsx","03-Components/Modal/ModalForCards/ModalForUpdateCard.tsx","02-Features/06-Cards/CardElement/CardElement.tsx","02-Features/06-Cards/01-selectors.ts","02-Features/06-Cards/Cards.tsx","03-Components/ErrorSnackBar/ErrorSnackBar.tsx","02-Features/07-Learning/LearnCardElement/LearnCardElement.tsx","02-Features/07-Learning/LearningPage.tsx","02-Features/08-Page404/Page404.tsx","helpers/AuthRedirectPage.tsx","00-App/Routes/Routes.tsx","03-Components/NavBar/NavBar.tsx","02-Features/00-Header/Header.tsx","03-Components/Preloader/Preloader.tsx","00-App/App.tsx","reportWebVitals.ts","00-App/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","authAPI","post","email","password","rememberMe","delete","name","avatar","token","put","initialState","initializedSuccess","appState","status","error","setAppStatus","state","type","isLoggedIn","user","created","isAdmin","publicCardPacksCount","updated","_id","setIsLoggedIn","payload","setUserData","userData","getAuthUserData","dispatch","a","res","data","response","message","updateProfileData","tokenName","updatedUser","Logout","useDispatch","className","s","logoutForm","onClick","info","selectorIsAuth","auth","selectorUserData","selectorUserId","FileInput","n","useState","file","setFile","baseImage","setBaseImage","uploadImage","e","target","files","convertBase64","base64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","image_upload","input_label","accept","multiple","photoLoad","onChange","currentTarget","value","length","btn_image_upload","btn_label","sentBtn","file_size","size","toFixed","Button","children","disabled","style","button","Profile","React","memo","useForm","register","handleSubmit","errors","setError","reset","editMode","setEditMode","isAuth","useSelector","authSelectors","profileData","useParams","profile_header","profile_header_cover","profile_header_info","profile_header_info__description","user_avatar","user_avatar__img","src","width","profile_name","form_wrapper","onSubmit","placeholder","autoFocus","profile_name__input","ref","required","validate","save_name_btn","cancel_btn","profile_settings","verified","edit_name_btn","profile_email","social_links","href","link","backgroundColor","user_state","user_state__item","title","text","to","path","LOGIN","UniversalButton","red","restProps","finalClassName","default","InputText","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","key","CheckBox","onChangeChecked","checkbox","checked","selectorError","app","selectorAppStatus","Login","appStatus","appSelectors","setEmail","setPassword","setRememberMe","onclickEmail","useCallback","onclickPassword","onclickHandler","login","stylesContainer","container","inner","REG","activeClassName","activeLink","inactive","PASS_REC","registrationAPI","dataReg","isRedirect","setRegistrationAC","regData","Registration","isRedirectProfile","registration","onChangeHandlerEmail","onChangeHandlerPassword","dataAboutUser","addedUser","Object","keys","in","isEmailValid","isPassValid","passwordRegExp","SendingForm","formName","formDescription","callback","inputPlaceholder","inputType","buttonName","btnDisabled","navLinkPath","setValue","buttonOnClick","formWrapper","passwordAPI","from","resetPasswordToken","ResetPassword","useEffect","resetPassword","PasswordRecovery","sendRecoveryEmail","cardPacksAPI","page","pageCount","packName","min","max","user_id","get","cardsPack","id","cardPacks","currentPage","pageSize","packsTotalCount","showAll","filter","userId","setFilter","getCardPacks","requestPage","cardPacksTotalCount","Paginator","onPageChanged","totalItemsCount","portionSize","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","usersPageNumber","p","map","classnames","selected","pageNumber","DoubleRange","range","setRange","values","step","renderTrack","props","onMouseDown","onTouchStart","height","display","margin","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","index","isDragged","boxShadow","position","top","color","fontWeight","fontSize","fontFamily","padding","ModalWindow","active","setActive","modal","modalActive","modalContent","modalContentActive","stopPropagation","btn","ModalForAddPack","addPackHandler","setNamePack","setTypeNewPack","ModalForUpdateCardsPack","setTitleCard","updateModalHandler","ModalForDelete","deleteModalHandlerYes","CardPacksElement","pack","updateCardPacks","removeCardPacks","activeModalDelete","setActiveModalDelete","activeModalUpdate","setActiveModalUpdate","titleCard","course","coursePreview","CARDS","fas","faChevronRight","courseInfo","progressContainer","cardsCount","btnWrapper","LEARNING","selectorCardPacks","selectorFilter","selectorPacksTotalCount","selectorCurrentPage","selectorPageSize","selectorEditMode","CardPacks","inputValue","setInputValue","activeModalAdd","setActiveModalAdd","namePack","typeNewPack","filtered","serverNum","cardTestObj","Date","getTime","changeCardPacks","getState","mappedPacks","dataForm","search","cardsBlock","cardPacksTable","addCardPacks","cardsAPI","card","cardId","grade","card_id","cards","cardsTotalCount","packUserId","setGrade","getCards","cardsPackId","console","log","ModalForAddCards","addCardHandler","setNewQuestionCard","setNewAnswerCard","setTypeNewCard","ModalForUpdateCard","setQuestionCard","setAnswerCard","CardElement","updateCard","removeCard","questionCard","answerCard","question","answer","cardsPack_id","rating","selectorCards","Cards","newQuestionCard","newAnswerCard","typeNewCard","changeCard","packId","updatedCard","deletedCard","deleteCard","mappedCards","cardsPage","ErrorSnackBar","notification","closeNotification","errorMessage","close","LearnCardElement","setIsChecked","onNextCard","grades","mappedButton","el","getRandomCard","sum","reduce","acc","rand","random","newSum","LearningPage","cardsSelectors","firstCard","setFirstCard","isChecked","setCard","cardID","newGrade","sendGrade","alert","pageContainer","Page404","errorPage","firstP","secondP","thirdP","item","PROFILE","AuthRedirectPage","firstRendering","setFirstRendering","redirect","setRedirect","spin","setSpin","setTimeout","PASSWORD_POST","CARD_PACKS","ALL_COMPONENTS","Routes","routes","exact","render","NavBar","header","openSidebarMenu","htmlFor","sidebarIconToggle","spinner","diagonal","part1","horizontal","part2","sidebarMenu","sidebarMenuInner","main","center","mainInner","Header","logo","nav","Preloader","fullOverlay","loader","App","finalStyle","activeFullOverlay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","actions","newPacks","newCard","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a4292ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_header\":\"Profile_profile_header__2GXFV\",\"profile_header_cover\":\"Profile_profile_header_cover__2fuLN\",\"profile_header_info\":\"Profile_profile_header_info__18Rtl\",\"profile_header_info__description\":\"Profile_profile_header_info__description__orxaD\",\"profile_name\":\"Profile_profile_name__1w5I5\",\"verified\":\"Profile_verified__3Tn6y\",\"form_wrapper\":\"Profile_form_wrapper__2v5Jy\",\"profile_name__input\":\"Profile_profile_name__input__1pyoK\",\"save_name_btn\":\"Profile_save_name_btn__8avdD\",\"cancel_btn\":\"Profile_cancel_btn__28fOn\",\"profile_settings\":\"Profile_profile_settings__29pIr\",\"edit_name_btn\":\"Profile_edit_name_btn__1xj05\",\"profile_email\":\"Profile_profile_email__2aMt2\",\"user_avatar\":\"Profile_user_avatar__1Esx4\",\"user_avatar__img\":\"Profile_user_avatar__img__2_K6v\",\"social_links\":\"Profile_social_links__1F9ZC\",\"link\":\"Profile_link__MyvQh\",\"user_state\":\"Profile_user_state__3gPbM\",\"user_state__item\":\"Profile_user_state__item__28mLa\",\"title\":\"Profile_title__2hWye\",\"text\":\"Profile_text__3zUa7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"NavBar_header__1wuPw\",\"mainInner\":\"NavBar_mainInner__3bKi3\",\"sidebarMenu\":\"NavBar_sidebarMenu__1HnFp\",\"sidebarMenuInner\":\"NavBar_sidebarMenuInner__OyR6W\",\"openSidebarMenu\":\"NavBar_openSidebarMenu__C92db\",\"sidebarIconToggle\":\"NavBar_sidebarIconToggle__3Z12O\",\"spinner\":\"NavBar_spinner__rLQ0M\",\"horizontal\":\"NavBar_horizontal__1M9ZO\",\"diagonal\":\"NavBar_diagonal__1YOHI\",\"part1\":\"NavBar_part1__3sA7n\",\"part2\":\"NavBar_part2__1LndU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__13Bgo\",\"inner\":\"container_inner__207Nk\",\"link\":\"container_link__1k752\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3obbo\",\"logo\":\"Header_logo__DhEXk\",\"nav\":\"Header_nav__2yUdQ\",\"item\":\"Header_item__tC0JU\",\"activeLink\":\"Header_activeLink__3-XZE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pack\":\"CardPacksElement_pack__Qgpey\",\"course\":\"CardPacksElement_course__1xkgI\",\"coursePreview\":\"CardPacksElement_coursePreview__2WIKj\",\"courseInfo\":\"CardPacksElement_courseInfo__3tNvu\",\"progressContainer\":\"CardPacksElement_progressContainer__DKXF5\",\"progress\":\"CardPacksElement_progress__23LI0\",\"progressText\":\"CardPacksElement_progressText__19ldD\",\"btnWrapper\":\"CardPacksElement_btnWrapper__1g1Ur\",\"btn\":\"CardPacksElement_btn__1nZXZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataForm\":\"CardPacks_dataForm__3kTSb\",\"search\":\"CardPacks_search__1pIhT\",\"cardsBlock\":\"CardPacks_cardsBlock__1ozRq\",\"paginator\":\"CardPacks_paginator__21B0S\",\"cardPacksTable\":\"CardPacks_cardPacksTable__1egkW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image_upload\":\"FileInput_image_upload___N4jh\",\"input_label\":\"FileInput_input_label__3NewZ\",\"photoLoad\":\"FileInput_photoLoad__10fLM\",\"btn_image_upload\":\"FileInput_btn_image_upload__3aOSM\",\"btn_label\":\"FileInput_btn_label__2PEbt\",\"sentBtn\":\"FileInput_sentBtn__1XR-L\",\"file_size\":\"FileInput_file_size__Aqbrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1vT5E\",\"modalActive\":\"Modal_modalActive__2HVS_\",\"modalContent\":\"Modal_modalContent__2-EGC\",\"btn\":\"Modal_btn__2DX2Q\",\"modalContentActive\":\"Modal_modalContentActive__3PgTV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorPage\":\"Page404_errorPage__3JF4p\",\"firstP\":\"Page404_firstP__10AaY\",\"thirdP\":\"Page404_thirdP__1DPQL\",\"secondP\":\"Page404_secondP__2cArQ\",\"item\":\"Page404_item__2fTDo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"ErrorSnackBar_notification__20Xfe\",\"closeNotification\":\"ErrorSnackBar_closeNotification__2jz6m\",\"text\":\"ErrorSnackBar_text__lGBgd\",\"close\":\"ErrorSnackBar_close__1YK3x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inactive\":\"Login_inactive__I9aAw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"InputText_superInput__33XzB\",\"errorInput\":\"InputText_errorInput__zJrOL\",\"error\":\"InputText_error__cr8YP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"SendingForm_title__ateQS\",\"inactive\":\"SendingForm_inactive__1qzA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPageNumber\":\"Paginator_usersPageNumber__36MO-\",\"totalCount\":\"Paginator_totalCount__2wLJM\",\"pageNumber\":\"Paginator_pageNumber__3bi68\",\"selected\":\"Paginator_selected__AZe-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsPage\":\"Cards_cardsPage__2ITpV\",\"search\":\"Cards_search__3WHRy\",\"cardsBlock\":\"Cards_cardsBlock__34Ha6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"UniversalButton_default__3YhBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"CheckBox_checkbox__2RULr\",\"spanClassName\":\"CheckBox_spanClassName__2hJTJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullOverlay\":\"Preloader_fullOverlay__QQSnR\",\"loader\":\"Preloader_loader__2gIOq\",\"load1\":\"Preloader_load1__3DQMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoutForm\":\"Logout_logoutForm__2Zn8g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__vd708\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardElement_card__3q3bK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"LearningPage_pageContainer__3vKt4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"routes\":\"Routes_routes__GZXAz\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n     // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n})\r\n\r\nexport type APIResponseType<D = {}> = {\r\n    data: D\r\n    statusText: string\r\n}\r\n","import {instance} from './api';\r\nimport {UserDataType} from '../02-Features/01-Login/auth-reducer';\r\n\r\ntype UpdateUserResponse = {\r\n    token: string\r\n    updatedUser: UserDataType\r\n}\r\n\r\nexport const authAPI = {\r\n\r\n    getAuth() {\r\n        return instance.post<UserDataType>(`auth/me`)\r\n    },\r\n\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<UserDataType>('auth/login', {email, password, rememberMe})\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete('auth/me')\r\n    },\r\n\r\n    updateProfileData(name?: string, avatar?: string, token?: string) {\r\n        return instance.put<UpdateUserResponse>('auth/me', {name, avatar, token})\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {ThunkDispatch} from 'redux-thunk';\r\nimport {AppStoreType} from './store';\r\nimport {getAuthUserData} from '../02-Features/01-Login/auth-reducer';\r\n\r\ntype ActionsType = ReturnType<typeof setAppStatus> | ReturnType<typeof initializedSuccess>\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState = {\r\n    initializedSuccess: false,\r\n    appState: {\r\n        status: 'idle',\r\n        error: null as string | null\r\n    } as AppState\r\n}\r\n\r\nexport type AppState = {\r\n    status: RequestStatusType,\r\n    error: null | string\r\n}\r\n\r\ntype AppInitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: AppInitialStateType = initialState, actions: ActionsType): AppInitialStateType => {\r\n    switch (actions.type) {\r\n        case 'CARDS/APP/SET-APP-STATUS':\r\n            return {...state, appState: actions.state}\r\n        case 'CARDS/APP/INITIALIZED_SUCCESS': {\r\n            return {...state, initializedSuccess: true}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAppStatus = (state: AppState) => ({\r\n    type: 'CARDS/APP/SET-APP-STATUS', state\r\n} as const)\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: 'CARDS/APP/INITIALIZED_SUCCESS'\r\n} as const)\r\n\r\nexport const initializeApp = () => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n    try {\r\n        await dispatch(getAuthUserData())\r\n        dispatch(initializedSuccess)\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n","import {Dispatch} from 'redux';\r\nimport {authAPI} from '../../01-API/00-login-api';\r\nimport {setAppStatus} from '../../00-App/app-reducer';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {AppStoreType} from '../../00-App/store';\r\n\r\ntype ActionsType = ReturnType<typeof setIsLoggedIn>\r\n    | ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setUserData>\r\n    | ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof updateUserProfile>\r\n\r\nexport type UserDataType = {\r\n    avatar: string,\r\n    created: number,\r\n    email: string,\r\n    isAdmin: boolean,\r\n    name: string,\r\n    publicCardPacksCount: number,\r\n    rememberMe: boolean,\r\n    token: string,\r\n    updated: number,\r\n    _id: string,\r\n}\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    user: {\r\n        avatar: '',\r\n        created: 5,\r\n        email: '',\r\n        isAdmin: false,\r\n        name: '',\r\n        publicCardPacksCount: 0,\r\n        rememberMe: false,\r\n        token: '',\r\n        updated: 5,\r\n        _id: '',\r\n    }\r\n}\r\n\r\ntype AuthInitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: AuthInitialStateType = initialState, action: ActionsType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case 'CARDS/LOGIN/SET_IS_AUTH':\r\n            return {...state, isLoggedIn: action.payload.isLoggedIn}\r\n        case 'CARDS/LOGIN/SET_USER_DATA':\r\n            return {...state, user: action.payload.userData}\r\n        case  'CARDS/LOGIN/UPDATE_PROFILE':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    name: action.payload.user.name,\r\n                    avatar: action.payload.user.avatar\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsLoggedIn = (isLoggedIn: boolean) => ({\r\n    type: 'CARDS/LOGIN/SET_IS_AUTH', payload: {\r\n        isLoggedIn\r\n    }\r\n}) as const\r\n\r\nexport const setUserData = (userData: UserDataType) => ({\r\n    type: 'CARDS/LOGIN/SET_USER_DATA', payload: {\r\n        userData\r\n    }\r\n}) as const\r\n\r\nexport const updateUserProfile = (user: UserDataType) => ({\r\n    type: 'CARDS/LOGIN/UPDATE_PROFILE', payload: {\r\n        user\r\n    }\r\n} as const)\r\n\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await authAPI.login(email, password, rememberMe)\r\n        dispatch(setUserData(res.data))\r\n        dispatch(setIsLoggedIn(true))\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await authAPI.getAuth()\r\n        dispatch(setUserData(res.data))\r\n        dispatch(setIsLoggedIn(true))\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await authAPI.logout()\r\n        dispatch(setIsLoggedIn(false))\r\n        dispatch(setAppStatus({status: 'succeeded', error: res.data.info}))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const updateProfileData = (name?: string, avatar?: string, tokenName?: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n        dispatch(setAppStatus({status: 'loading', error: null}))\r\n        try {\r\n            const res = await authAPI.updateProfileData(name, avatar, tokenName)\r\n            dispatch(updateUserProfile(res.data.updatedUser))\r\n            dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n            dispatch(setAppStatus({status: 'failed', error: error}))\r\n        }\r\n    }\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Logout.module.css';\r\nimport {logout} from '../auth-reducer';\r\nimport {useDispatch} from 'react-redux';\r\n\r\ntype LoginPropsType = {}\r\n\r\nconst Logout: React.FC<LoginPropsType> = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let onclickHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <span className={s.logoutForm} onClick={onclickHandler}> LOGOUT</span>\r\n    )\r\n}\r\n\r\nexport default Logout;","import {AppStoreType} from '../../00-App/store';\r\n\r\nexport const selectorIsAuth = (state: AppStoreType) => state.auth.isLoggedIn\r\nexport const selectorUserData = (state: AppStoreType) => state.auth.user\r\nexport const selectorUserId = (state: AppStoreType) => state.auth.user._id\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './FileInput.module.scss'\r\nimport {updateProfileData} from '../01-Login/auth-reducer';\r\nimport {useDispatch} from 'react-redux';\r\n\r\ninterface IFileInputProps {\r\n\r\n}\r\n\r\nconst FileInput: React.FC<IFileInputProps> = () => {\r\n\r\n    const [file, setFile] = useState<any>();\r\n    const [baseImage, setBaseImage] = useState<any>()\r\n\r\n    const uploadImage = async (e: ChangeEvent<HTMLInputElement>) => {\r\n        const file = e.target.files && e.target.files[0]\r\n        if (file) {\r\n            setFile(file)\r\n        }\r\n        const base64 = await convertBase64(file)\r\n        setBaseImage(base64)\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const updateProfile = () => {\r\n        dispatch(updateProfileData('', baseImage))\r\n        setBaseImage('')\r\n    }\r\n\r\n    const convertBase64 = (file: any) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader()\r\n            fileReader.readAsDataURL(file)\r\n\r\n            fileReader.onload = (() => {\r\n                resolve(fileReader.result)\r\n            })\r\n\r\n            fileReader.onerror = ((error) => {\r\n                reject(error)\r\n            })\r\n        })\r\n    }\r\n\r\n    const returnFileSize = (n: number) => {\r\n        if (n < 1024) {\r\n            return n + 'bytes';\r\n        } else if (n > 1024 && n < 1048576) {\r\n            return (n / 1024).toFixed(2) + 'KB';\r\n        } else if (n > 1048576) {\r\n            return (n / 1048576).toFixed(2) + 'MB';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={s.image_upload}>\r\n                <label className={s.input_label}>\r\n                    <input type=\"file\"\r\n                           accept=\".jpg, .jpeg, .png\"\r\n                           multiple\r\n                           className={s.photoLoad}\r\n                           onChange={(e) => {\r\n                               e.currentTarget.value.length !== 0 &&\r\n                               uploadImage(e)\r\n                           }}/>\r\n                </label>\r\n            </div>\r\n            {baseImage &&\r\n                <div className={s.btn_image_upload}>\r\n                    <label className={s.btn_label}>\r\n                        {\r\n                            <input onClick={updateProfile} className={s.sentBtn}/>\r\n                        }\r\n                        <span className={s.file_size}>{file && returnFileSize(file.size)}</span>\r\n                    </label>\r\n                </div>\r\n            }\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default FileInput;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport style from \"./Button.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype ButtonPropsType = DefaultInputPropsType & {}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({children,onClick, className, disabled}) => {\r\n\r\n    return <button className={`${style.button} ${className}`} disabled={disabled} onClick={onClick}>{children}</button>\r\n\r\n}\r\n\r\nexport default Button;\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {authSelectors} from '../01-Login/00-index';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {path} from '../../00-App/Routes/Routes';\r\nimport s from './Profile.module.scss'\r\nimport {updateProfileData, UserDataType} from '../01-Login/auth-reducer';\r\nimport FileInput from './FileInput';\r\nimport {useForm} from 'react-hook-form';\r\nimport Button from '../../03-Components/Button/Button';\r\n\r\nexport const Profile: React.FC = React.memo(() => {\r\n\r\n    const {register, handleSubmit, errors, setError, reset} = useForm();\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    const isAuth = useSelector<AppStoreType, boolean>(authSelectors.selectorIsAuth)\r\n    const profileData = useSelector<AppStoreType, UserDataType | null>(authSelectors.selectorUserData)\r\n\r\n    const {token} = useParams<Record<string, string | undefined>>();\r\n    const tokenName = token ? token : ''\r\n\r\n    const dispatch = useDispatch()\r\n    const onSubmit = (data: { name: string }, e: any) => {\r\n        dispatch(updateProfileData(data.name, '', tokenName))\r\n        setEditMode(false)\r\n    }\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={path.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile_header}>\r\n            <div className={s.profile_header_cover}/>\r\n            <div className={s.profile_header_info}>\r\n                <div className={s.profile_header_info__description}>\r\n                    <div className={s.user_avatar}>\r\n                        <img className={s.user_avatar__img}\r\n                             src={profileData! && profileData.avatar}\r\n                             width={'200px'}\r\n                        />\r\n                        <FileInput/>\r\n                    </div>\r\n                    <div className={s.profile_name}>\r\n                        {\r\n                            editMode\r\n                                ? <form className={s.form_wrapper} onSubmit={handleSubmit(onSubmit)}>\r\n                                    <input name='name'\r\n                                           type=\"text\"\r\n                                           placeholder={'Enter name'}\r\n                                           autoFocus\r\n                                           className={s.profile_name__input}\r\n                                           ref={register({\r\n                                               required: true,\r\n                                               validate: value => value.length >= 2\r\n                                           })}\r\n                                    />\r\n                                    <Button className={s.save_name_btn}>Save</Button>\r\n                                    <Button className={s.cancel_btn} onClick={() => setEditMode(false)}>Cancel</Button>\r\n                                </form>\r\n                                : <div className={s.profile_settings}>\r\n                                    <span className={s.verified}/>\r\n                                    <span>{profileData && profileData.name}</span>\r\n                                    <Button className={s.edit_name_btn} onClick={() => setEditMode(true)}\r\n                                    >Edit Name</Button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    <div className={s.profile_email}\r\n                    > {errors.name && 'Your last name is less than 2 characters'}\r\n                    </div>\r\n                </div>\r\n                <div className={s.social_links}>\r\n                    <a href=\"#\" className={s.link}>Link</a>\r\n                    <a href=\"#\" className={s.link} style={{backgroundColor: '#1abcff'}}>Link</a>\r\n                    <a href=\"#\" className={s.link} style={{backgroundColor: '#f8468d'}}>Link</a>\r\n                    <a href=\"#\" className={s.link} style={{backgroundColor: '#7b5dfa'}}>Link</a>\r\n                    <a href=\"#\" className={s.link} style={{backgroundColor: '#fd434f'}}>Link</a>\r\n                    <a href=\"#\" className={s.link} style={{backgroundColor: '#00e194'}}>Link</a>\r\n                </div>\r\n                <div className={s.user_state}>\r\n                    <div className={s.user_state__item}>\r\n                        <p className={s.title}>{profileData && profileData.publicCardPacksCount}</p>\r\n                        <p className={s.text}>PACKS</p>\r\n                    </div>\r\n                    <div className={s.user_state__item}>\r\n                        <p className={s.title}>{profileData && profileData.publicCardPacksCount}</p>\r\n                        <p className={s.text}>PACKS</p>\r\n                    </div>\r\n                    <div className={s.user_state__item}>\r\n                        <p className={s.title}>{profileData && profileData.publicCardPacksCount}</p>\r\n                        <p className={s.text}>PACKS</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n{/*<div className={s.card}>*/\r\n}\r\n{/*    <div className={`${s.face} ${s.face1}`}>*/\r\n}\r\n{/*        <div className={s.content}>*/\r\n}\r\n{/*            <div className={s.icon}>*/\r\n}\r\n{/*                <i className={`${s.fa} ${s.faLinkedinSquare}`} aria-hidden=\"true\">*/\r\n}\r\n{/*                    <img src={profileData && profileData.avatar ? profileData.avatar : 'img not found'}*/\r\n}\r\n{/*                         alt=\"\"/>*/\r\n}\r\n{/*                </i>*/\r\n}\r\n{/*            </div>*/\r\n}\r\n{/*        </div>*/\r\n}\r\n{/*    </div>*/\r\n}\r\n{/*    <div className={`${s.face} ${s.face2}`}>*/\r\n}\r\n{/*        <div className={s.content}>*/\r\n}\r\n{/*            <h3>*/\r\n}\r\n{/*                {!editMode ? <span> user name: {profileData && profileData.name} </span>*/\r\n}\r\n{/*                    : <InputText onEnter={updateProfile}*/\r\n}\r\n{/*                                 onBlur={updateProfile}*/\r\n}\r\n{/*                                 value={name}*/\r\n}\r\n{/*                                 onChange={(e) => setName(e.currentTarget.value)}*/\r\n}\r\n{/*                    />*/\r\n}\r\n{/*                }*/\r\n}\r\n{/*                <Button onClick={() => setEditMode(true)}>Edit name</Button>*/\r\n}\r\n{/*                <ChangeUserImg/>*/\r\n}\r\n{/*            </h3>*/\r\n}\r\n{/*            <p>User email: {profileData && profileData.email}</p>*/\r\n}\r\n{/*            <p>User created: {profileData && profileData.created}</p>*/\r\n}\r\n{/*            <p>Card packs count: {profileData && profileData.publicCardPacksCount}</p>*/\r\n}\r\n{/*        </div>*/\r\n}\r\n{/*    </div>*/\r\n}\r\n{/*</div>*/\r\n}\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport s from './UniversalButton.module.css';\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nexport const UniversalButton: React.FC<SuperButtonPropsType> = React.memo((\r\n    {\r\n        red, className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n        />\r\n    )\r\n})\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react';\r\nimport s from './InputText.module.css';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nexport const InputText: React.FC<SuperInputTextPropsType> = React.memo((\r\n    {\r\n        value,\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === 'Enter'\r\n        && onEnter\r\n        && onEnter();\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                type={type}\r\n                {...restProps}\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n})\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport s from './CheckBox.module.css';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nexport const CheckBox: React.FC<SuperCheckboxPropsType> = React.memo((\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label>\r\n    )\r\n})\r\n","import {AppStoreType} from './store';\r\n\r\nexport const selectorError = (state: AppStoreType) => state.app.appState.error\r\nexport const selectorAppStatus = (state: AppStoreType) => state.app.appState.status\r\n","import React, {ChangeEvent, useCallback, useState} from 'react';\r\nimport stylesContainer from '../../assets/css/container.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {UniversalButton} from '../../03-Components/Button/FormButton/UniversalButton';\r\nimport {path} from '../../00-App/Routes/Routes';\r\nimport s from '../01-Login/Login.module.css';\r\nimport {InputText} from '../../03-Components/InputText/InputText';\r\nimport {CheckBox} from '../../03-Components/Checkbox/CheckBox';\r\nimport {appSelectors} from '../../00-App/00-index';\r\nimport {selectorIsAuth} from './01-selectors';\r\nimport {login} from './auth-reducer';\r\n\r\ntype LoginPropsType = {}\r\n\r\nexport const Login: React.FC<LoginPropsType> = React.memo(() => {\r\n    const isAuth = useSelector<AppStoreType, boolean>(selectorIsAuth)\r\n    const appStatus = useSelector<AppStoreType, string>(appSelectors.selectorAppStatus)\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const onclickEmail = useCallback((e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value), [setEmail])\r\n    const onclickPassword = useCallback((e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value), [setPassword])\r\n\r\n    const dispatch = useDispatch()\r\n    const onclickHandler = useCallback(() => {\r\n        dispatch(login(email, password, rememberMe))\r\n    }, [email, password, rememberMe, dispatch])\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={stylesContainer.container}>\r\n            <h4>SIGN IN</h4>\r\n            <p>test email: nya-admin@nya.nya</p>\r\n            <p>test password: 1qazxcvBG</p>\r\n            <div className={stylesContainer.inner}>\r\n                <InputText type={'email'}\r\n                           placeholder={'Enter email'}\r\n                           onChange={onclickEmail}/>\r\n                <InputText type={'password'}\r\n                           placeholder={'Password'}\r\n                           onChange={onclickPassword}/>\r\n                <CheckBox onChangeChecked={setRememberMe}>Remember me</CheckBox>\r\n                <UniversalButton disabled={appStatus === 'loading'}\r\n                                 onClick={onclickHandler}> SUBMIT </UniversalButton>\r\n                <hr/>\r\n                <p>Not registered? <NavLink to={path.REG}\r\n                                            activeClassName={stylesContainer.activeLink}\r\n                                            className={s.inactive}>Create an Account.</NavLink></p>\r\n                <p>Forgot password? <NavLink to={path.PASS_REC}\r\n                                             activeClassName={stylesContainer.activeLink}\r\n                                             className={s.inactive}>Click here to recover.</NavLink></p>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import {RegistrationRequestType, RegistrationResponseType} from '../02-Features/02-Registration/registration-reducer';\r\nimport {instance} from './api';\r\n\r\nexport const registrationAPI = {\r\n\r\n    registration(dataReg: RegistrationRequestType) {\r\n        return instance.post<RegistrationResponseType>(`auth/register`, {...dataReg})\r\n    }\r\n}","import {Dispatch} from 'redux';\r\nimport {registrationAPI} from '../../01-API/01-regestration-api';\r\nimport {setAppStatus} from '../../00-App/app-reducer';\r\n\r\ntype ActionsType = ReturnType<typeof setRegistrationAC>\r\n    | ReturnType<typeof setRedirectProfileAC>\r\n    | ReturnType<typeof setAppStatus>\r\n\r\ntype InitialStateType = {\r\n    password: string\r\n    email: string\r\n    isRedirect: boolean\r\n}\r\nexport type RegistrationRequestType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type RegistrationResponseType = {\r\n    addedUser: {\r\n        created: string\r\n        email: string\r\n        isAdmin: boolean\r\n        name: string\r\n        publicCardPacksCount: number\r\n        rememberMe: boolean\r\n        updated: string\r\n        verified: boolean\r\n        __v: number\r\n        _id: string\r\n    }\r\n}\r\nexport type ErrorResponseType = {\r\n    response: {\r\n        data: {\r\n            emailRegExp?: {}\r\n            error: string\r\n            email?: string\r\n            in: string\r\n            isEmailValid?: boolean\r\n            isPassValid?: boolean\r\n            passwordRegExp?: string\r\n        }\r\n    }\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    password: '',\r\n    email: '',\r\n    isRedirect: false,\r\n}\r\n\r\nexport const registrationReducer = (state = initialState, actions: ActionsType): InitialStateType => {\r\n    switch (actions.type) {\r\n        case 'SET-REGISTRATION':\r\n            return {...state, ...actions.regData}\r\n        case 'SET-REDIRECT-PROFILE':\r\n            return {...state, isRedirect: actions.isRedirect}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setRegistrationAC = (regData: RegistrationRequestType) => ({type: 'SET-REGISTRATION', regData} as const)\r\n\r\nexport const setRedirectProfileAC = (isRedirect: boolean) => ({type: 'SET-REDIRECT-PROFILE', isRedirect} as const)\r\n\r\nexport const registrationTC = (regData: RegistrationRequestType) => async (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await registrationAPI.registration({...regData})\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        const dataAboutUser = res.data.addedUser\r\n        if (Object.keys(dataAboutUser).length === 10) {\r\n            dispatch(setRegistrationAC({...regData}))\r\n            dispatch(setRedirectProfileAC(true))\r\n            dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        }\r\n    } catch (error) {\r\n        dispatch(setAppStatus({status: 'loading', error: null}))\r\n        if (error.response.data.in === 'createUser') {\r\n            dispatch(setAppStatus({\r\n                status: 'failed',\r\n                error: error.response.data.error\r\n            }))\r\n        }\r\n        if (!error.response.data.isEmailValid) {\r\n            dispatch(setAppStatus({\r\n                status: 'failed',\r\n                error: error.response.data.error\r\n            }))\r\n        }\r\n        if (!error.response.data.isPassValid) {\r\n            error.response.data.passwordRegExp && dispatch(setAppStatus({\r\n                status: 'failed',\r\n                error: error.response.data.passwordRegExp\r\n            }))\r\n        }\r\n    }\r\n}\r\n\r\n","import React, {ChangeEvent, useCallback, useState} from 'react';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {registrationTC} from './registration-reducer';\r\nimport {path} from '../../00-App/Routes/Routes';\r\nimport stylesContainer from '../../assets/css/container.module.css';\r\nimport {InputText} from '../../03-Components/InputText/InputText';\r\nimport {UniversalButton} from '../../03-Components/Button/FormButton/UniversalButton';\r\n\r\nimport s from '../01-Login/Login.module.css';\r\nimport {CheckBox} from '../../03-Components/Checkbox/CheckBox';\r\nimport {appSelectors} from '../../00-App/00-index';\r\n\r\nexport const Registration: React.FC = React.memo(() => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n\r\n    const isRedirectProfile = useSelector<AppStoreType, boolean>(state => state.registration.isRedirect)\r\n    const appStatus = useSelector<AppStoreType, string>(appSelectors.selectorAppStatus)\r\n    const onChangeHandlerEmail = useCallback((e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value), [])\r\n    const onChangeHandlerPassword = useCallback((e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value), [])\r\n\r\n    const dispatch = useDispatch()\r\n    const onClickHandler = () => (dispatch(registrationTC({email, password})))\r\n\r\n    if (isRedirectProfile) {\r\n        return <Redirect to={path.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={stylesContainer.container}>\r\n            <h4>CREATE A NEW ACCOUNT</h4>\r\n            <div className={stylesContainer.inner}>\r\n                <InputText type={'text'}\r\n                           value={email}\r\n                           onChange={onChangeHandlerEmail}\r\n                           placeholder={'Email'}/>\r\n                <InputText type={'password'}\r\n                           value={password}\r\n                           onChange={onChangeHandlerPassword}\r\n                           placeholder={'Password'}/>\r\n                <CheckBox>I agree to the Terms of Service and Privacy Policy</CheckBox>\r\n                <UniversalButton onClick={onClickHandler}\r\n                                 disabled={appStatus === 'loading'}> SIGN UP </UniversalButton>\r\n                <hr/>\r\n                <p>Already registered? <NavLink to={path.LOGIN}\r\n                                                activeClassName={stylesContainer.activeLink}\r\n                                                className={s.inactive}>Sign in to your account.</NavLink></p>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './SendingForm.module.css';\r\nimport stylesContainer from '../../assets/css/container.module.css';\r\nimport {UniversalButton} from '../Button/FormButton/UniversalButton';\r\nimport {InputText} from '../InputText/InputText';\r\n\r\ntype PropsType = {\r\n    formName: string\r\n    formDescription?: string\r\n    callback: (value1: string, value2?: string | undefined) => void\r\n    status?: string\r\n    inputPlaceholder?: string\r\n    inputType: string\r\n\r\n    buttonName: string\r\n    btnDisabled: boolean\r\n\r\n    navLinkPath?: string\r\n\r\n    restProps?: any\r\n}\r\n\r\nexport const SendingForm: React.FC<PropsType> = React.memo((\r\n    {\r\n        formName,\r\n        formDescription,\r\n\r\n        callback,\r\n        status,\r\n        inputPlaceholder,\r\n\r\n        inputType,\r\n        buttonName,\r\n        btnDisabled,\r\n\r\n        navLinkPath,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const inputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n\r\n    const buttonOnClick = () => {\r\n        callback(value)\r\n        //clear local state field\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div className={s.formWrapper}>\r\n            <h4>{formName}</h4>\r\n            <div className={stylesContainer.inner}>\r\n                <h3 className={s.title}>{formDescription}</h3>\r\n                {\r\n                    status && <span>{status}</span>\r\n                }\r\n                <div>\r\n                    <div>\r\n                        <InputText type={inputType}\r\n                                            onEnter={buttonOnClick}\r\n                                            value={value}\r\n                                            placeholder={inputPlaceholder && inputPlaceholder}\r\n                                            onChange={inputHandler}/>\r\n                        <UniversalButton onClick={buttonOnClick}\r\n                                         disabled={btnDisabled}>{buttonName}\r\n                        </UniversalButton>\r\n                        <hr/>\r\n                        <p> Let's <NavLink to={navLinkPath ? navLinkPath : ''}\r\n                                           activeClassName={stylesContainer.activeLink} className={s.inactive}>\r\n                            Sign in </NavLink></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import {APIResponseType, instance} from './api';\r\n\r\nexport const passwordAPI = {\r\n\r\n    recoveryPassword(email: string) {\r\n        return instance.post<APIResponseType<PasswordRecoveryType>>('auth/forgot', {\r\n            email: email,\r\n            from: 'test-front-admin <serega.kuharionok@yandex.ru>',\r\n            message: `<div style=\"background-color: #00ff00; padding: 15px\">\r\n                            password recovery link: \r\n                     <a href='http://localhost:3000/FridayProject#/newPassword/$token$'>Click</a>\r\n                     </div>`\r\n        });\r\n    },\r\n\r\n    resetPassword(password: string, token: string | undefined) {\r\n        return instance.post<APIResponseType<SetNewPasswordType>>('auth/set-new-password', {\r\n            password,\r\n            resetPasswordToken: token\r\n        });\r\n    }\r\n}\r\n\r\nexport type PasswordRecoveryType = {\r\n    answer: boolean\r\n    html: boolean\r\n    info: string\r\n    success: boolean\r\n}\r\n\r\nexport type SetNewPasswordType = {\r\n    info: string\r\n    error: string\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useParams} from 'react-router-dom';\r\nimport {SendingForm} from '../../03-Components/SendingForm/SendingForm';\r\nimport {resetPassword} from './resetPassword-thunks';\r\nimport {path} from '../../00-App/Routes/Routes';\r\nimport stylesContainer from '../../assets/css/container.module.css';\r\nimport {appSelectors} from '../../00-App/00-index';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {setAppStatus} from '../../00-App/app-reducer';\r\n\r\nexport const ResetPassword: React.FC = React.memo(() => {\r\n    const {token} = useParams<Record<string, string | undefined>>();\r\n    const appStatus = useSelector<AppStoreType, string>(appSelectors.selectorAppStatus)\r\n    const tokenName = token ? token : ''\r\n\r\n    const resetOldPassword = (password: string) => {\r\n        dispatch(resetPassword(password, tokenName))\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        // dispatch(getAuthUserData())\r\n        return () => {\r\n            dispatch(setAppStatus({status: 'idle', error: null}))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={stylesContainer.container}>\r\n            <SendingForm formName={'RESET PASSWORD'}\r\n                         formDescription={`Create a new, strong password that you don't use for other websites`}\r\n                         callback={resetOldPassword}\r\n                         inputPlaceholder={'enter your new password'}\r\n                         inputType={'password'}\r\n                         buttonName={'Reset'}\r\n                         btnDisabled={appStatus === 'loading'}\r\n                         navLinkPath={path.LOGIN}\r\n            />\r\n        </div>\r\n    )\r\n})\r\n","import {Dispatch} from 'redux';\r\nimport {passwordAPI} from '../../01-API/02-password-api';\r\nimport {setAppStatus} from '../../00-App/app-reducer';\r\n\r\nexport const sendRecoveryEmail = (email: string) => async (dispatch: Dispatch) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await passwordAPI.recoveryPassword(email)\r\n        if (res.status === 200) {\r\n            dispatch(setAppStatus({\r\n                status: 'succeeded',\r\n                error: `if account \"${email}\" exist, an email will be sent with further instruction`\r\n            }))\r\n        } else {\r\n            dispatch(setAppStatus({status: 'failed', error: 'Something went wrong:('}))\r\n        }\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const resetPassword = (password: string, token: string | undefined) => async (dispatch: Dispatch) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await passwordAPI.resetPassword(password, token)\r\n        if (res.status === 200) {\r\n            dispatch(setAppStatus({status: 'succeeded', error: 'The password change is successful'}))\r\n        } else {\r\n            dispatch(setAppStatus({status: 'failed', error: 'Something went wrong:('}))\r\n        }\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {SendingForm} from '../../03-Components/SendingForm/SendingForm';\r\nimport {sendRecoveryEmail} from './resetPassword-thunks';\r\nimport {setAppStatus} from '../../00-App/app-reducer';\r\nimport {path} from '../../00-App/Routes/Routes';\r\nimport stylesContainer from '../../assets/css/container.module.css';\r\nimport {appSelectors} from '../../00-App/00-index';\r\n\r\nexport const PasswordRecovery: React.FC = React.memo(() => {\r\n    const appStatus = useSelector<AppStoreType, string>(appSelectors.selectorAppStatus)\r\n\r\n    const sendEmail = (email: string) => {\r\n        dispatch(sendRecoveryEmail(email))\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setAppStatus({status: 'idle', error: null}))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={stylesContainer.container}>\r\n            <SendingForm formName={'RECOVERY PASSWORD'}\r\n                         formDescription={`Enter the email address you used to register and we'll send you the instruction`}\r\n                         callback={sendEmail}\r\n                         inputPlaceholder={'enter your email address'}\r\n                         inputType={'email'}\r\n                         buttonName={'Send'}\r\n                         btnDisabled={appStatus === 'loading'}\r\n                         navLinkPath={path.LOGIN}\r\n            />\r\n        </div>\r\n    )\r\n})\r\n","import {instance} from './api';\r\nimport {CardPacksType} from '../02-Features/05-CardPacks/cardPacks-reducer';\r\n\r\nexport const cardPacksAPI = {\r\n\r\n    getCardPacks(page: number, pageCount: number, packName: string = '', min: number, max: number, user_id: string) {\r\n        return instance.get<GetCardPacksResponseType>(`cards/pack?page=${page}&pageCount=${pageCount}&packName=${packName}&min=${min}&max=${max}&user_id=${user_id}`);\r\n    },\r\n\r\n    createCardsPack(cardsPack: CardPacksType) {\r\n        return instance.post('cards/pack', {cardsPack});\r\n    },\r\n\r\n    updateCardsPack(cardsPack: CardPacksType) {\r\n        return instance.put('cards/pack', {cardsPack});\r\n    },\r\n\r\n    deleteCardsPack(id: string) {\r\n        return instance.delete(`cards/pack?id=${id}`);\r\n    }\r\n}\r\n\r\ntype GetCardPacksResponseType = {\r\n    cardPacks: CardPacksType[],\r\n    page: number,\r\n    pageCount: number,\r\n    cardPacksTotalCount: number,\r\n    minCardsCount: number,\r\n    maxCardsCount: number,\r\n    token: string,\r\n    tokenDeathTime: string\r\n}\r\n\r\nexport type UpdateCardsPackType = {\r\n    _id: string,\r\n    name: string\r\n}\r\n","import {Dispatch} from 'redux';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {cardPacksAPI} from '../../01-API/03-cardPacks-api';\r\nimport {setAppStatus} from '../../00-App/app-reducer';\r\n\r\ntype ActionsType = ReturnType<typeof setCardPacks>\r\n    | ReturnType<typeof setFilter>\r\n    | ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setPacksTotalCount>\r\n    | ReturnType<typeof createCardPacks>\r\n    | ReturnType<typeof showMode>\r\n\r\nexport type CardPacksType = {\r\n    _id: string\r\n    user_id?: string\r\n    user_name?: string\r\n    private?: boolean\r\n    name: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    cardsCount?: number | undefined\r\n    type: string\r\n    rating?: number\r\n    created?: string | undefined\r\n    updated?: string\r\n    more_id?: string\r\n    __v?: number\r\n}\r\n\r\nexport type CardPacksFilterType = {\r\n    packName: string\r\n    min: number\r\n    max: number\r\n    userId: string,\r\n}\r\n\r\nconst initialState = {\r\n    cardPacks: [] as CardPacksType[],\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    packsTotalCount: 5,\r\n    showAll: false,\r\n    filter: {\r\n        packName: '',\r\n        min: 0,\r\n        max: 15,\r\n        userId: '',\r\n    } as CardPacksFilterType\r\n}\r\n\r\nexport type CardsPackInitialStateType = typeof initialState\r\n\r\nexport const cardPacksReducer = (state = initialState, actions: ActionsType): CardsPackInitialStateType => {\r\n    switch (actions.type) {\r\n        case 'CARDS/CARD-PACKS/SET-CURRENT-PAGE':\r\n            return {...state, currentPage: actions.currentPage};\r\n        case 'CARDS/CARD-PACKS/SET-PACKS-TOTAL-COUNT':\r\n            return {...state, packsTotalCount: actions.packsTotalCount};\r\n        case 'CARDS/CARD-PACKS/SET-FILTER':\r\n            return {...state, filter: actions.filter}\r\n        case 'CARDS/CARD-PACKS/SET-SHOW-MODE':\r\n            return {...state, showAll: actions.value}\r\n        case 'CARDS/CARD-PACKS/SET-CARDS':\r\n            return {...state, cardPacks: actions.cardPacks}\r\n        case 'CARDS/CARD-PACKS/ADD-CARDS':\r\n            return {...state, cardPacks: [actions.newPacks, ...state.cardPacks]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCardPacks = (cardPacks: CardPacksType[]) => ({type: 'CARDS/CARD-PACKS/SET-CARDS', cardPacks} as const)\r\nexport const createCardPacks = (newPacks: CardPacksType) => ({type: 'CARDS/CARD-PACKS/ADD-CARDS', newPacks} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({\r\n    type: 'CARDS/CARD-PACKS/SET-CURRENT-PAGE',\r\n    currentPage\r\n} as const)\r\nexport const setPacksTotalCount = (packsTotalCount: number) => ({\r\n    type: 'CARDS/CARD-PACKS/SET-PACKS-TOTAL-COUNT',\r\n    packsTotalCount\r\n} as const)\r\nexport const setFilter = (filter: CardPacksFilterType) => ({\r\n    type: 'CARDS/CARD-PACKS/SET-FILTER', filter\r\n} as const)\r\nexport const showMode = (value: boolean) => ({\r\n    type: 'CARDS/CARD-PACKS/SET-SHOW-MODE', value\r\n} as const)\r\n\r\nexport const getCardPacks = (requestPage: number, pageSize: number, filter: CardPacksFilterType) => async (dispatch: Dispatch<ActionsType>) => {\r\n\r\n    dispatch(setCurrentPage(requestPage))\r\n    dispatch(setFilter(filter))\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n\r\n    try {\r\n        const res = await cardPacksAPI.getCardPacks(requestPage, pageSize, filter.packName, filter.min, filter.max, filter.userId)\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(setCardPacks(res.data.cardPacks))\r\n        dispatch(setPacksTotalCount(res.data.cardPacksTotalCount))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const addCardPacks = (cardPacks: CardPacksType) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>, getState: () => AppStoreType) => {\r\n\r\n    const requestPage = getState().cardsPack.currentPage\r\n    const pageSize = getState().cardsPack.pageSize\r\n    const filter = getState().cardsPack.filter\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n\r\n    try {\r\n        await cardPacksAPI.createCardsPack(cardPacks)\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(getCardPacks(requestPage, pageSize, filter))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const updateCardPacks = (cardsPack: CardPacksType) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>, getState: () => AppStoreType) => {\r\n\r\n    const requestPage = getState().cardsPack.currentPage\r\n    const pageSize = getState().cardsPack.pageSize\r\n    const filter = getState().cardsPack.filter\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n\r\n    try {\r\n        await cardPacksAPI.updateCardsPack(cardsPack)\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(getCardPacks(requestPage, pageSize, filter))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const deleteCardPacks = (id: string) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>, getState: () => AppStoreType) => {\r\n\r\n    const requestPage = getState().cardsPack.currentPage\r\n    const pageSize = getState().cardsPack.pageSize\r\n    const filter = getState().cardsPack.filter\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n\r\n    const res = await cardPacksAPI.deleteCardsPack(id)\r\n    try {\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(getCardPacks(requestPage, pageSize, filter))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n","import React, {useState} from 'react'\r\nimport classnames from 'classnames'\r\nimport {Button} from '../Button/Button'\r\n\r\nimport s from './Paginator.module.css'\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    portionSize?: number\r\n}\r\n\r\nexport const Paginator: React.FC<PropsType> = React.memo((\r\n    {currentPage, onPageChanged, pageSize, totalItemsCount, portionSize = 10}\r\n) => {\r\n\r\n    const pageCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    const pages = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pageCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize + 1\r\n\r\n    const prevPortionNumberHandler = () => {\r\n        setPortionNumber(portionNumber - 1)\r\n    }\r\n\r\n    const nextPortionNumberHandler = () => setPortionNumber(portionNumber + 1)\r\n\r\n    return (\r\n        <div className={s.usersPageNumber}>\r\n            {portionNumber > 1\r\n            && <Button onClick={prevPortionNumberHandler}>PREV</Button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p, i) => {\r\n                    return <span key={`number_items${i}`}\r\n                                 className={classnames({\r\n                                     [s.selected]: currentPage === p\r\n                                 }, s.pageNumber)}\r\n                                 onClick={() => {\r\n                                     onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n            {portionCount > portionNumber\r\n            && <Button onClick={nextPortionNumberHandler}>NEXT</Button>}\r\n        </div>\r\n    )\r\n})\r\n","import * as React from 'react';\r\nimport {getTrackBackground, Range} from 'react-range';\r\n\r\ntype DoubleRangePropsType = {\r\n    range: Array<number>,\r\n    setRange: (newValues: Array<number>) => void\r\n}\r\n\r\nconst DoubleRange: React.FC<DoubleRangePropsType> = ({range, setRange, children}) => {\r\n\r\n    return (\r\n        <Range\r\n            values={range}\r\n            step={1}\r\n            min={0}\r\n            max={15}\r\n            onChange={values => setRange(values)}\r\n            renderTrack={({props, children}) => (\r\n                <div\r\n                    onMouseDown={props.onMouseDown}\r\n                    onTouchStart={props.onTouchStart}\r\n                    style={{\r\n                        ...props.style,\r\n                        height: '36px',\r\n                        display: 'flex',\r\n                        width: '95%',\r\n                        margin: '0px',\r\n                    }}\r\n                >\r\n                    <div\r\n                        ref={props.ref}\r\n                        style={{\r\n                            height: '5px',\r\n                            width: '100%',\r\n                            borderRadius: '4px',\r\n                            background: getTrackBackground({\r\n                                values: range,\r\n                                colors: ['#ccc', '#2d4052', '#ccc'],\r\n                                min: range[0],\r\n                                max: range[1]\r\n\r\n                            }),\r\n                            alignSelf: 'center'\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            renderThumb={({index, props, isDragged}) => (\r\n                <div\r\n                    {...props}\r\n                    style={{\r\n                        ...props.style,\r\n                        height: '12px',\r\n                        width: '12px',\r\n                        borderRadius: '1px',\r\n                        backgroundColor: '#FFF',\r\n                        boxShadow: '0px 2px 6px #AAA',\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            top: '-28px',\r\n                            color: '#fff',\r\n                            fontWeight: 'bold',\r\n                            fontSize: '14px',\r\n                            fontFamily: 'Arial,Helvetica Neue,Helvetica,sans-serif',\r\n                            padding: '4px',\r\n                            borderRadius: '4px',\r\n                            backgroundColor: '#2d4052'\r\n                        }}\r\n                    >\r\n                        {range[index].toFixed(0)}\r\n                    </div>\r\n                    <div style={{height: '16px', width: '5px', backgroundColor: isDragged ? '#2d4052' : '#CCC'}}/>\r\n                </div>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default DoubleRange","import React from 'react';\r\nimport s from './Modal.module.css'\r\n\r\ntype ModalPropsType = {\r\n    active: boolean,\r\n    setActive: (active: boolean) => void\r\n}\r\n\r\nexport const ModalWindow: React.FC<ModalPropsType> = ({active, setActive, children}) => {\r\n    return (\r\n        <div className={active ? `${s.modal} + ${s.modalActive}` : s.modal} onClick={() => setActive(false)}>\r\n            <div className={active ? `${s.modalContent} + ${s.modalContentActive}` : s.modalContent}\r\n                 onClick={(e) => e.stopPropagation()}>\r\n                <button className={s.btn} onClick={() => setActive(false)}>x</button>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport {ModalWindow} from '../Modal';\r\nimport {InputText} from '../../InputText/InputText';\r\nimport {UniversalButton} from '../../Button/FormButton/UniversalButton';\r\n\r\ntype ModalAddPropsType = {\r\n    active: boolean,\r\n    setActive: (active: boolean) => void\r\n    addPackHandler: () => void,\r\n    setNamePack: (e: string) => void,\r\n    setTypeNewPack: (e: string) => void\r\n}\r\n\r\nexport const ModalForAddPack: React.FC<ModalAddPropsType> = React.memo((\r\n    {\r\n        active,\r\n        setActive,\r\n        addPackHandler,\r\n        setNamePack,\r\n        setTypeNewPack\r\n    }\r\n) => {\r\n\r\n    const handlerForAddNamePack = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNamePack(e.currentTarget.value)\r\n\r\n    }\r\n    const handlerForAddTypeNewPack = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTypeNewPack(e.currentTarget.value)\r\n\r\n    }\r\n\r\n    const addCardHandlerCancel = () => {\r\n        setActive(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <ModalWindow active={active} setActive={setActive}>\r\n                <h4>ADD NEW PACK</h4>\r\n                <p>TITLE NEW PACK</p><InputText type={'text'}\r\n                                                         onChange={handlerForAddNamePack}\r\n                                                         placeholder={'Write title here'}/>\r\n                <p>TYPE NEW PACK</p> <InputText type={'text'}\r\n                                                         onChange={handlerForAddTypeNewPack}\r\n                                                         placeholder={'Write type of card pack here'}/>\r\n                <UniversalButton onClick={addPackHandler}>ADD</UniversalButton>\r\n                <UniversalButton onClick={addCardHandlerCancel}>CANCEL</UniversalButton>\r\n            </ModalWindow>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport {ModalWindow} from '../Modal';\r\nimport {InputText} from '../../InputText/InputText';\r\nimport {UniversalButton} from '../../Button/FormButton/UniversalButton';\r\n\r\ntype ModalUpdatePropsType = {\r\n    active: boolean,\r\n    setActive: (active: boolean) => void,\r\n    setTitleCard: (t: string) => void,\r\n    updateModalHandler: () => void\r\n}\r\n\r\nexport const ModalForUpdateCardsPack: React.FC<ModalUpdatePropsType> = React.memo((\r\n    {\r\n        setActive,\r\n        active,\r\n        setTitleCard,\r\n        updateModalHandler\r\n    }\r\n) => {\r\n\r\n    const handlerForUpdateTitleCard = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitleCard(e.currentTarget.value)\r\n    }\r\n    const updateModalHandlerCancel = () => {\r\n        setActive(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <ModalWindow active={active} setActive={setActive}>\r\n                <h4>HERE YOU CAN CHANGE THIS PACK</h4>\r\n                <InputText type={'text'} onChange={handlerForUpdateTitleCard}\r\n                                    placeholder={'Write a new title for pack'}/>\r\n                <UniversalButton onClick={updateModalHandler}>Update</UniversalButton>\r\n                <UniversalButton onClick={updateModalHandlerCancel}>Cancel</UniversalButton>\r\n            </ModalWindow>\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport {ModalWindow} from '../Modal';\r\nimport {UniversalButton} from '../../Button/FormButton/UniversalButton';\r\n\r\ntype ModalDeletePropsType = {\r\n    active: boolean,\r\n    setActive: (active: boolean) => void,\r\n    deleteModalHandlerYes: () => void\r\n}\r\n\r\nexport const ModalForDelete: React.FC<ModalDeletePropsType> = React.memo((\r\n    {\r\n        deleteModalHandlerYes,\r\n        setActive,\r\n        active\r\n    }\r\n) => {\r\n    const deleteModalHandlerNo = () => {\r\n        setActive(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <ModalWindow active={active} setActive={setActive}>\r\n                <h4>ARE YOU SURE?</h4>\r\n                <UniversalButton onClick={deleteModalHandlerYes}>Yes</UniversalButton>\r\n                <UniversalButton onClick={deleteModalHandlerNo}>No</UniversalButton>\r\n            </ModalWindow>\r\n        </div>\r\n    )\r\n})\r\n","import React, {useState} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {CardPacksType} from '../cardPacks-reducer';\r\nimport {path} from '../../../00-App/Routes/Routes';\r\nimport Button from '../../../03-Components/Button/Button';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../../00-App/store';\r\nimport {ModalForUpdateCardsPack} from '../../../03-Components/Modal/ModalForCards/ModalForUpdateCardsPack';\r\nimport {ModalForDelete} from '../../../03-Components/Modal/ModalForCards/ModalForDelete';\r\nimport {authSelectors} from '../../01-Login/00-index';\r\n\r\nimport s from './CardPacksElement.module.css'\r\n\r\ntype PropsType = {\r\n    pack: CardPacksType\r\n    updateCardPacks: (cardsPack: CardPacksType) => void\r\n    removeCardPacks: (id: string) => void\r\n}\r\n\r\nexport const CardPacksElement: React.FC<PropsType> = React.memo((\r\n    {\r\n        pack,\r\n        updateCardPacks,\r\n        removeCardPacks,\r\n    }) => {\r\n\r\n    const userId = useSelector<AppStoreType, string | undefined>(authSelectors.selectorUserId)\r\n\r\n    const [activeModalDelete, setActiveModalDelete] = useState<boolean>(false)\r\n    const [activeModalUpdate, setActiveModalUpdate] = useState<boolean>(false)\r\n    const [titleCard, setTitleCard] = useState<string>('')\r\n\r\n    const onUpdateHandler = () => {\r\n        setActiveModalUpdate(true)\r\n    }\r\n    const onRemoveHandler = () => {\r\n        setActiveModalDelete(true)\r\n    }\r\n    const deleteModalHandlerYes = () => {\r\n        removeCardPacks(pack._id)\r\n    }\r\n    const updateModalHandler = () => {\r\n        updateCardPacks && updateCardPacks({_id: pack._id, name: titleCard, type: 'bla-type'})\r\n        setActiveModalUpdate(false)\r\n        setTitleCard('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.course}>\r\n                <div className={s.coursePreview}>\r\n                    <h6>Title</h6>\r\n                    <h2>{pack.type}</h2>\r\n                    <NavLink to={path.CARDS + '/' + pack._id} activeClassName={s.active}>View all cards\r\n                        <i\r\n                            className={`${s.fas} ${s.faChevronRight}`}>\r\n                        </i>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.courseInfo}>\r\n                    <div className={s.progressContainer}>\r\n                        <h6>Cards count: {pack.cardsCount}</h6>\r\n                    </div>\r\n                    <h6>NAME</h6>\r\n                    <h2>{pack.name}</h2>\r\n                    <div className={s.btnWrapper}>\r\n                        {\r\n                            pack.user_id === userId\r\n                                ? <>\r\n                                    <Button onClick={onUpdateHandler}\r\n                                            className={s.btn}>Update\r\n                                    </Button>\r\n                                    <Button onClick={onRemoveHandler}\r\n                                            className={s.btn}>Delete\r\n                                    </Button>\r\n                                </>\r\n                                : ''\r\n                        }\r\n\r\n                        <NavLink to={path.LEARNING + '/' + pack._id}\r\n                                 className={s.btn}>Learn\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ModalForDelete active={activeModalDelete}\r\n                            setActive={setActiveModalDelete}\r\n                            deleteModalHandlerYes={deleteModalHandlerYes}/>\r\n            <ModalForUpdateCardsPack active={activeModalUpdate}\r\n                                     setActive={setActiveModalUpdate}\r\n                                     setTitleCard={setTitleCard}\r\n                                     updateModalHandler={updateModalHandler}/>\r\n        </>\r\n    )\r\n})\r\n","import {AppStoreType} from '../../00-App/store';\r\n\r\nexport const selectorCardPacks = (state: AppStoreType) => state.cardsPack.cardPacks\r\nexport const selectorFilter = (state: AppStoreType) => state.cardsPack.filter\r\nexport const selectorPacksTotalCount = (state: AppStoreType) => state.cardsPack.packsTotalCount\r\nexport const selectorCurrentPage = (state: AppStoreType) => state.cardsPack.currentPage\r\nexport const selectorPageSize = (state: AppStoreType) => state.cardsPack.pageSize\r\nexport const selectorEditMode = (state: AppStoreType) => state.cardsPack.showAll\r\n","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport s from './CardPacks.module.css'\r\nimport {\r\n    addCardPacks,\r\n    CardPacksFilterType,\r\n    CardPacksType,\r\n    deleteCardPacks,\r\n    getCardPacks,\r\n    showMode,\r\n    updateCardPacks\r\n} from './cardPacks-reducer';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {Paginator} from '../../03-Components/Paginator/Paginator';\r\nimport DoubleRange from '../../03-Components/DoubleRange/DoubleRange';\r\nimport {path} from '../../00-App/Routes/Routes';\r\nimport {ModalForAddPack} from '../../03-Components/Modal/ModalForPack/ModalForAddPack';\r\nimport {CardPacksElement} from './CardPaksElement/CardPacksElement';\r\nimport {UniversalButton} from '../../03-Components/Button/FormButton/UniversalButton';\r\nimport {InputText} from '../../03-Components/InputText/InputText';\r\nimport {CheckBox} from '../../03-Components/Checkbox/CheckBox';\r\nimport {\r\n    selectorCardPacks,\r\n    selectorCurrentPage,\r\n    selectorEditMode,\r\n    selectorFilter,\r\n    selectorPacksTotalCount,\r\n    selectorPageSize\r\n} from './01-selectors';\r\nimport {selectorUserData} from '../01-Login/01-selectors';\r\nimport {authSelectors} from '../01-Login/00-index';\r\nimport {UserDataType} from '../01-Login/auth-reducer';\r\n\r\nexport const CardPacks: React.FC = React.memo(() => {\r\n\r\n    const isAuth = useSelector<AppStoreType, boolean>(authSelectors.selectorIsAuth)\r\n    const cardPacks = useSelector<AppStoreType, CardPacksType[]>(selectorCardPacks)\r\n\r\n    //filter data\r\n    const packsTotalCount = useSelector<AppStoreType, number>(selectorPacksTotalCount)\r\n    const filter = useSelector<AppStoreType, CardPacksFilterType>(selectorFilter)\r\n    const currentPage = useSelector<AppStoreType, number>(selectorCurrentPage)\r\n    const pageSize = useSelector<AppStoreType, number>(selectorPageSize)\r\n    const editMode = useSelector<AppStoreType, boolean>(selectorEditMode)\r\n\r\n    const userData = useSelector<AppStoreType, UserDataType | null>(selectorUserData)\r\n\r\n    //filter state\r\n    const [inputValue, setInputValue] = useState<string>('')\r\n    const [range, setRange] = useState([0, 15])\r\n\r\n    //modal\r\n    const [activeModalAdd, setActiveModalAdd] = useState<boolean>(false)\r\n    const [namePack, setNamePack] = useState<string>('')\r\n    const [typeNewPack, setTypeNewPack] = useState<string>('undefined')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onPageChanged = useCallback((currentPage: number) => {\r\n        dispatch(getCardPacks(currentPage, pageSize, filtered))\r\n    }, [currentPage])\r\n\r\n    const onSearch = () => dispatch(getCardPacks(currentPage, pageSize, filtered))\r\n    const showOwnPack = (e: ChangeEvent<HTMLInputElement>) => dispatch(showMode(e.target.checked))\r\n    const inputHandler = (e: ChangeEvent<HTMLInputElement>) => setInputValue(e.currentTarget.value)\r\n\r\n    const filtered: CardPacksFilterType = {\r\n        packName: inputValue,\r\n        min: range[0],\r\n        max: range[1],\r\n        userId: editMode && userData ? userData._id : ''\r\n    }\r\n\r\n    function genID(serverNum: number) {\r\n        return (serverNum + '' + (new Date).getTime());\r\n    }\r\n\r\n    const cardTestObj: CardPacksType = {\r\n        _id: genID(5),\r\n        name: namePack,\r\n        type: typeNewPack\r\n    }\r\n\r\n    const onAddCardPacks = () => {\r\n        setActiveModalAdd(true)\r\n    }\r\n    const addPackHandler = () => {\r\n        dispatch(addCardPacks(cardTestObj))\r\n        setActiveModalAdd(false)\r\n    }\r\n    const changeCardPacks = (cardsPack: CardPacksType) => {\r\n        dispatch(updateCardPacks(cardsPack))\r\n    }\r\n    const removeCardPacks = (_id: string) => {\r\n        dispatch(deleteCardPacks(_id))\r\n    }\r\n\r\n    const mappedPacks = cardPacks.map((p: CardPacksType) =>\r\n        <CardPacksElement key={p._id}\r\n                          pack={p}\r\n                          updateCardPacks={changeCardPacks}\r\n                          removeCardPacks={removeCardPacks}/>)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardPacks(currentPage, pageSize, filter))\r\n    }, [])\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={path.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dataForm}>\r\n                <div className={s.search}>\r\n                    <h4>FORM FOR SEARCH</h4>\r\n                    <DoubleRange range={range} setRange={setRange}/>\r\n                    <InputText onChange={inputHandler} placeholder={'search...'}/>\r\n                    <CheckBox checked={editMode}\r\n                              onChange={showOwnPack}> Show only mine pack </CheckBox>\r\n                    <UniversalButton onClick={onSearch}>Search</UniversalButton>\r\n                    <UniversalButton onClick={onAddCardPacks}>Add new CardPack</UniversalButton>\r\n                </div>\r\n                <div className={s.cardsBlock}>\r\n                    <Paginator currentPage={currentPage}\r\n                               onPageChanged={onPageChanged}\r\n                               pageSize={pageSize}\r\n                               totalItemsCount={packsTotalCount}/>\r\n                    <div className={s.cardPacksTable}>\r\n                        {\r\n                            mappedPacks\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ModalForAddPack active={activeModalAdd}\r\n                             setActive={setActiveModalAdd}\r\n                             addPackHandler={addPackHandler}\r\n                             setNamePack={setNamePack}\r\n                             setTypeNewPack={setTypeNewPack}/>\r\n        </>\r\n    )\r\n})\r\n","import {instance} from './api';\r\nimport {CardType} from '../02-Features/06-Cards/cards-reducer';\r\n\r\nexport const cardsAPI = {\r\n\r\n    getCards(id: string) {\r\n        return instance.get<GetCardsResponseType>(`cards/card?cardsPack_id=${id ? id : ''}`)\r\n    },\r\n\r\n    createCard(card: CardType) {\r\n        return instance.post('cards/card', {card});\r\n    },\r\n\r\n    updateCard(card: CardType) {\r\n        return instance.put<UpdatedCardResponseType>('cards/card', {card});\r\n    },\r\n\r\n    deleteCard(cardId: string) {\r\n        return instance.delete<DeleteCardResponseType>(`cards/card/?id=${cardId}`);\r\n    },\r\n\r\n    sendGrade(grade: number, card_id: string) {\r\n        return instance.put<UpdateGradeCardResponse>('cards/grade', {grade, card_id});\r\n    },\r\n}\r\n\r\ntype GetCardsResponseType = {\r\n    cards: CardType[],\r\n    page: number,\r\n    pageCount: number,\r\n    cardsTotalCount: number,\r\n    packUserId: string,\r\n}\r\n\r\ntype DeleteCardResponseType = {\r\n    deletedCard: {\r\n        cardsPack_id: string\r\n    }\r\n}\r\n\r\ntype UpdatedCardResponseType = {\r\n    updatedCard: {\r\n        cardsPack_id: string\r\n    }\r\n}\r\n\r\ntype UpdateGradeCardResponse = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id: string\r\n    user_id: string\r\n    grade: number\r\n    shots: number\r\n}\r\n","import {Dispatch} from 'redux';\r\nimport {cardsAPI} from '../../01-API/04-cards-api';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {setAppStatus} from '../../00-App/app-reducer';\r\n\r\ntype ActionsType = ReturnType<typeof setCards>\r\n    | ReturnType<typeof setFilter>\r\n    | ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setGrade>\r\n    | ReturnType<typeof createCard>\r\n\r\nexport type CardType = {\r\n    answer: string,\r\n    question: string,\r\n    cardsPack_id: string,\r\n    grade: number,\r\n    rating: number,\r\n    shots?: number,\r\n    type: string,\r\n    user_id?: string,\r\n    created?: string,\r\n    updated?: string,\r\n    __v?: 0,\r\n    _id: string,\r\n}\r\n\r\nexport type CardsFilterType = {\r\n    packName: string\r\n    min: number\r\n    max: number\r\n}\r\n\r\nconst initialState = {\r\n    cards: [] as CardType[],\r\n    page: 1,\r\n    pageCount: 3,\r\n    cardsTotalCount: 5,\r\n    packUserId: '',\r\n    filter: {\r\n        packName: '',\r\n        min: 0,\r\n        max: 15,\r\n    } as CardsFilterType\r\n} as const\r\n\r\nexport type CardsInitialStateType = typeof initialState\r\n\r\nexport const cardsReducer = (state: CardsInitialStateType = initialState, actions: ActionsType): CardsInitialStateType => {\r\n    switch (actions.type) {\r\n        case 'CARDS/CARDS/SET-FILTER':\r\n            return {...state, filter: actions.payload.filter}\r\n        case 'CARDS/CARDS/SET-CARDS':\r\n            return {...state, cards: actions.cards}\r\n        case 'CARDS/CARDS/ADD-CARD':\r\n            return {...state, cards: [actions.newCard, ...state.cards]}\r\n        case 'CARDS/CARDS/SET-GRADE':\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(\r\n                    (card, i) => card._id === actions.payload.id\r\n                        ? {...card, grade: actions.payload.grade}\r\n                        : card\r\n                )\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCards = (cards: CardType[]) => ({type: 'CARDS/CARDS/SET-CARDS', cards} as const)\r\n\r\nexport const createCard = (newCard: CardType) => ({type: 'CARDS/CARDS/ADD-CARD', newCard} as const)\r\n\r\nexport const setFilter = (filter: CardsFilterType) => ({\r\n    type: 'CARDS/CARDS/SET-FILTER', payload: {\r\n        filter\r\n    }\r\n} as const)\r\n\r\nexport const setGrade = (grade: number, id: string) => ({\r\n    type: 'CARDS/CARDS/SET-GRADE',\r\n    payload: {\r\n        id,\r\n        grade\r\n    }\r\n} as const)\r\n\r\n\r\nexport const getCards = (cardsPackId: string) => async (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await cardsAPI.getCards(cardsPackId)\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(setCards(res.data.cards))\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addCard = (card: CardType) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        await cardsAPI.createCard(card)\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(getCards(card.cardsPack_id))\r\n        console.log(card)\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const updateCard = (card: CardType) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await cardsAPI.updateCard(card)\r\n        await dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        const packId = res.data.updatedCard.cardsPack_id\r\n        dispatch(getCards(packId))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console')\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const deleteCard = (id: string) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await cardsAPI.deleteCard(id)\r\n        await dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        const packId = res.data.deletedCard.cardsPack_id\r\n        dispatch(getCards(packId))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console')\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const sendGrade = (grade: number, card_id: string) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await cardsAPI.sendGrade(grade, card_id)\r\n        await dispatch(setAppStatus({status: 'succeeded', error: 'Sent'}))\r\n        const cardID = res.data._id\r\n        const newGrade = res.data.grade\r\n        dispatch(setGrade(newGrade, cardID))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus({status: 'succeeded', error: error}))\r\n    }\r\n}\r\n","import React, {ChangeEvent} from 'react';\r\nimport {ModalWindow} from '../Modal';\r\nimport {InputText} from '../../InputText/InputText';\r\nimport {UniversalButton} from '../../Button/FormButton/UniversalButton';\r\n\r\ntype ModalAddPropsType = {\r\n    active: boolean,\r\n    setActive: (active: boolean) => void\r\n    addCardHandler: () => void,\r\n    setNewQuestionCard: (q: string) => void,\r\n    setNewAnswerCard: (q: string) => void,\r\n    setTypeNewCard: (t: string) => void\r\n}\r\n\r\nexport const ModalForAddCards: React.FC<ModalAddPropsType> = React.memo((\r\n    {\r\n        active,\r\n        setActive,\r\n        addCardHandler,\r\n        setNewQuestionCard,\r\n        setNewAnswerCard,\r\n        setTypeNewCard\r\n    }\r\n) => {\r\n\r\n    const handlerForAddQuestionCard = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewQuestionCard(e.currentTarget.value)\r\n\r\n    }\r\n    const handlerForAddAnswerCard = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewAnswerCard(e.currentTarget.value)\r\n\r\n    }\r\n    const handlerForAddTypeCard = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTypeNewCard(e.currentTarget.value)\r\n\r\n    }\r\n    const addCardHandlerCancel = () => {\r\n        setActive(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <ModalWindow active={active} setActive={setActive}>\r\n                <h4>ADD NEW CARD</h4>\r\n                <p>QUESTION</p><InputText type={'text'}\r\n                                          onChange={handlerForAddQuestionCard}\r\n                                          placeholder={'Write your question here'}/>\r\n                <p>ANSWER</p> <InputText type={'text'}\r\n                                         onChange={handlerForAddAnswerCard}\r\n                                         placeholder={'Be sure to specify the answer'}/>\r\n                <p>TYPE</p> <InputText type={'text'} onChange={handlerForAddTypeCard}\r\n                                       placeholder={'Specify a type'}/>\r\n                <UniversalButton onClick={addCardHandler}>ADD</UniversalButton>\r\n                <UniversalButton onClick={addCardHandlerCancel}>Cancel</UniversalButton>\r\n            </ModalWindow>\r\n        </div>\r\n    )\r\n})\r\n","import React, {ChangeEvent} from 'react';\r\nimport {ModalWindow} from '../Modal';\r\nimport {InputText} from '../../InputText/InputText';\r\nimport {UniversalButton} from '../../Button/FormButton/UniversalButton';\r\n\r\ntype ModalUpdatePropsType = {\r\n    active: boolean,\r\n    setActive: (active: boolean) => void,\r\n    setQuestionCard: (q: string) => void,\r\n    setAnswerCard: (a: string) => void,\r\n    updateModalHandler: () => void\r\n}\r\n\r\nexport const ModalForUpdateCard: React.FC<ModalUpdatePropsType> = React.memo((\r\n    {\r\n        setActive,\r\n        active,\r\n        setQuestionCard,\r\n        setAnswerCard,\r\n        updateModalHandler\r\n    }\r\n) => {\r\n    const handlerForUpdateQuestionCard = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestionCard(e.currentTarget.value)\r\n    }\r\n    const handlerForUpdateAnswerCard = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswerCard(e.currentTarget.value)\r\n    }\r\n    const updateModalHandlerCancel = () => {\r\n        setActive(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ModalWindow active={active} setActive={setActive}>\r\n                <h4>YOU CAN DO SOME CHANGES</h4>\r\n                <InputText type={'text'} onChange={handlerForUpdateQuestionCard}\r\n                                    placeholder={'Here you can update question'}/>\r\n                <InputText type={'text'} onChange={handlerForUpdateAnswerCard}\r\n                                    placeholder={'Here you can update answer'}/>\r\n                <UniversalButton onClick={updateModalHandler}>Update</UniversalButton>\r\n                <UniversalButton onClick={updateModalHandlerCancel}>Cancel</UniversalButton>\r\n            </ModalWindow>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React, {useState} from 'react';\r\nimport {CardType} from '../cards-reducer';\r\nimport Button from '../../../03-Components/Button/Button';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport s from './CardElement.module.css'\r\nimport {AppStoreType} from '../../../00-App/store';\r\nimport {ModalForDelete} from '../../../03-Components/Modal/ModalForCards/ModalForDelete';\r\nimport {ModalForUpdateCard} from '../../../03-Components/Modal/ModalForCards/ModalForUpdateCard';\r\nimport {authSelectors} from '../../01-Login/00-index';\r\n\r\ntype CardPropsType = {\r\n    card: CardType\r\n    updateCard: (card: CardType) => void\r\n    removeCard: (id: string) => void\r\n}\r\n\r\nexport const CardElement: React.FC<CardPropsType> = React.memo((\r\n    {\r\n        card,\r\n        updateCard,\r\n        removeCard\r\n    }) => {\r\n\r\n    //for modal\r\n    const [activeModalDelete, setActiveModalDelete] = useState<boolean>(false)\r\n    const [activeModalUpdate, setActiveModalUpdate] = useState<boolean>(false)\r\n    const [questionCard, setQuestionCard] = useState<string>('')\r\n    const [answerCard, setAnswerCard] = useState<string>('')\r\n\r\n    //for disabled\r\n    const userId = useSelector<AppStoreType, string | undefined>(authSelectors.selectorUserId)\r\n\r\n    //for delete\r\n    const deleteModalHandlerYes = () => {\r\n        removeCard(card._id)\r\n    }\r\n\r\n    //for update\r\n    const updateModalHandler = () => {\r\n        updateCard({\r\n            _id: card._id,\r\n            type: 'Java',\r\n            question: questionCard,\r\n            answer: answerCard,\r\n            cardsPack_id: card.cardsPack_id,\r\n            grade: 4.54654,\r\n            rating: 0\r\n        })\r\n        setActiveModalUpdate(false)\r\n    }\r\n\r\n    const onUpdateHandler = () => {\r\n        setActiveModalUpdate(true)\r\n    }\r\n\r\n    const onRemoveHandler = () => {\r\n        setActiveModalDelete(true)\r\n    }\r\n\r\n    return (\r\n        <div className={s.card}>\r\n            <h5>{card.question ? card.question : 'empty question'}</h5>\r\n            <p>{card.answer ? card.answer : 'empty answer'}</p>\r\n            <p>type of card: {card.type ? card.type : 'empty type'} </p>\r\n            <p>grade: </p>\r\n            <p>{card.grade}</p>\r\n            <Button onClick={onUpdateHandler} disabled={card.user_id !== userId}>Update</Button>\r\n            <Button onClick={onRemoveHandler} disabled={card.user_id !== userId}>Delete</Button>\r\n\r\n            <ModalForDelete active={activeModalDelete}\r\n                            setActive={setActiveModalDelete}\r\n                            deleteModalHandlerYes={deleteModalHandlerYes}/>\r\n\r\n            <ModalForUpdateCard active={activeModalUpdate}\r\n                                setActive={setActiveModalUpdate}\r\n                                setQuestionCard={setQuestionCard}\r\n                                setAnswerCard={setAnswerCard}\r\n                                updateModalHandler={updateModalHandler}/>\r\n        </div>\r\n    )\r\n})\r\n","import {AppStoreType} from '../../00-App/store';\r\n\r\nexport const selectorCards = (state: AppStoreType) => state.cards.cards\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport s from './Cards.module.css'\r\nimport {addCard, CardType, deleteCard, getCards, updateCard} from './cards-reducer';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {path} from '../../00-App/Routes/Routes';\r\nimport {ModalForAddCards} from '../../03-Components/Modal/ModalForCards/ModalForAddCard';\r\nimport {CardElement} from './CardElement/CardElement';\r\nimport {UniversalButton} from '../../03-Components/Button/FormButton/UniversalButton';\r\nimport {selectorCards} from './01-selectors';\r\nimport {authSelectors} from '../01-Login/00-index';\r\n\r\nexport const Cards: React.FC = React.memo(() => {\r\n\r\n    const {id} = useParams<{ id: string }>();\r\n    const cards = useSelector<AppStoreType, CardType[]>(selectorCards)\r\n\r\n    const [activeModalAdd, setActiveModalAdd] = useState<boolean>(false)\r\n    const [newQuestionCard, setNewQuestionCard] = useState<string>('')\r\n    const [newAnswerCard, setNewAnswerCard] = useState<string>('')\r\n    const [typeNewCard, setTypeNewCard] = useState<string>('undefined')\r\n\r\n    const isAuth = useSelector<AppStoreType, boolean>(authSelectors.selectorIsAuth)\r\n\r\n\r\n    const onSearch = () => {\r\n        // dispatch(getCards({packName: inputValue, min: range[0], max: range[1]}))\r\n    }\r\n\r\n    function genID(serverNum: number) {\r\n        return (serverNum + '' + (new Date).getTime());\r\n    }\r\n\r\n    const cardTestObj: CardType = {\r\n        _id: genID(2),\r\n        type: typeNewCard,\r\n        question: newQuestionCard,\r\n        answer: newAnswerCard,\r\n        cardsPack_id: id,\r\n        grade: 4.54654,\r\n        rating: 0\r\n    }\r\n\r\n    const onAddCard = () => {\r\n        setActiveModalAdd(true)\r\n    }\r\n\r\n    const changeCard = (card: CardType) => {\r\n        dispatch(updateCard(card))\r\n    }\r\n    const addCardHandler = () => {\r\n        dispatch(addCard(cardTestObj))\r\n        setActiveModalAdd(false)\r\n    }\r\n    const removeCard = (id: string) => {\r\n        dispatch(deleteCard(id))\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getCards(id))\r\n    }, [])\r\n\r\n    if (!isAuth) return <Redirect to={path.LOGIN}/>\r\n    const mappedCards = cards.map((card: CardType) => <CardElement key={card._id}\r\n                                                                   card={card}\r\n                                                                   updateCard={changeCard}\r\n                                                                   removeCard={removeCard}/>)\r\n    return (\r\n        <>\r\n            <div className={s.cardsPage}>\r\n                <div>\r\n                    <h4> AVAILABLE CARDS </h4>\r\n                </div>\r\n                <div className={s.cardsBlock}>\r\n                    {mappedCards}\r\n                </div>\r\n                <div className={s.search}>\r\n                    <UniversalButton onClick={onSearch}>Search</UniversalButton>\r\n                    <UniversalButton onClick={onAddCard}>Add\r\n                        Card</UniversalButton>\r\n                </div>\r\n            </div>\r\n            <ModalForAddCards active={activeModalAdd}\r\n                              setActive={setActiveModalAdd}\r\n                              addCardHandler={addCardHandler}\r\n                              setNewQuestionCard={setNewQuestionCard}\r\n                              setNewAnswerCard={setNewAnswerCard}\r\n                              setTypeNewCard={setTypeNewCard}/>\r\n        </>\r\n    )\r\n})\r\n","import {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {setAppStatus} from '../../00-App/app-reducer';\r\n\r\nimport s from './ErrorSnackBar.module.css'\r\n\r\ntype ErrorBarPropsType = {\r\n    errorMessage: string\r\n}\r\n\r\nconst ErrorSnackBar = (props: ErrorBarPropsType) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppStoreType, string | null>(state => state.app.appState.error)\r\n\r\n    const onClickHandler = () => dispatch(setAppStatus({status: 'idle', error: null}))\r\n\r\n    return (\r\n        <div className={error ? `${s.notification}` : `: ${s.closeNotification}`}>\r\n            <div className={s.text}> {props.errorMessage} </div>\r\n            <div className={`${s.close}`}>\r\n                <div className={s.text} onClick={onClickHandler}>X</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorSnackBar;\r\n","import {CardType} from '../../06-Cards/cards-reducer';\r\nimport React from 'react';\r\nimport Button from '../../../03-Components/Button/Button';\r\nimport {UniversalButton} from '../../../03-Components/Button/FormButton/UniversalButton';\r\n\r\ntype LearnCardElementPropsType = {\r\n    card: CardType,\r\n    checked: boolean,\r\n    setIsChecked: (value: boolean) => void\r\n    onNextCard: (value: number) => void\r\n    grades: string[]\r\n}\r\n\r\nexport const LearnCardElement: React.FC<LearnCardElementPropsType> = (\r\n    {\r\n        card,\r\n        checked,\r\n        setIsChecked,\r\n        onNextCard,\r\n        grades\r\n    }\r\n) => {\r\n\r\n    const nextCard = (value: number) => {\r\n        onNextCard(value)\r\n    }\r\n\r\n    const mappedButton = grades.map((el, i) => (\r\n        <Button key={i}\r\n                onClick={(e) => nextCard(i + 1)}>{el}</Button>\r\n    ))\r\n\r\n    return (\r\n        <div>\r\n            <h5>QUESTION</h5>\r\n            <h4>{card.question}</h4>\r\n            <p>ID карты: {card._id}</p>\r\n            <div>\r\n                {\r\n                    !checked && <UniversalButton onClick={(e) => setIsChecked(true)}>CHECK</UniversalButton>\r\n                }\r\n            </div>\r\n            <div>\r\n                {\r\n                    checked && (\r\n                        <div>\r\n                            <hr/>\r\n                            <h4>Answer: {card.answer}</h4>\r\n                            <p>Type: {card.type}</p>\r\n                            <p>Grade: {card.grade}</p>\r\n                            <div>\r\n                                {\r\n                                    mappedButton\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {CardType, getCards, sendGrade} from '../06-Cards/cards-reducer';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport ErrorSnackBar from '../../03-Components/ErrorSnackBar/ErrorSnackBar';\r\nimport {path} from '../../00-App/Routes/Routes';\r\nimport {LearnCardElement} from './LearnCardElement/LearnCardElement';\r\nimport {cardsSelectors} from '../06-Cards/00-index';\r\nimport {authSelectors} from '../01-Login/00-index';\r\nimport {appSelectors} from '../../00-App/00-index';\r\n\r\nimport s from './LearningPage.module.css'\r\n\r\nconst grades = ['no idea', 'forgot', 'think long', 'mix up', 'knew'];\r\n\r\nconst getRandomCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\nexport const LearningPage: React.FC = React.memo(() => {\r\n    const cards = useSelector<AppStoreType, CardType[]>(cardsSelectors.selectorCards)\r\n    const isAuth = useSelector<AppStoreType, boolean>(authSelectors.selectorIsAuth)\r\n    const error = useSelector<AppStoreType, string | null>(appSelectors.selectorError)\r\n\r\n    const {id} = useParams<{ id: string }>();\r\n\r\n    const [firstCard, setFirstCard] = useState<boolean>(true)\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [card, setCard] = useState<CardType>({\r\n        _id: ''\r\n    } as CardType)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (firstCard) {\r\n            dispatch(getCards(id))\r\n            setFirstCard(false)\r\n        }\r\n        if (cards.length > 0) {\r\n            setCard(getRandomCard(cards))\r\n            return () => {\r\n                console.log('Learning Page clear effect ')\r\n            }\r\n        } else {\r\n\r\n        }\r\n    }, [cards, dispatch])\r\n\r\n    const onNextCard = useCallback((grade: number) => {\r\n        setIsChecked(false);\r\n        if (cards.length > 0) {\r\n            if(!card._id) {\r\n                console.log('error in useCallback')\r\n            }\r\n            dispatch(sendGrade(grade, card._id))\r\n            setCard(getRandomCard(cards))\r\n        } else {\r\n            alert(`Something bad 'onNextCard'`)\r\n        }\r\n    }, [cards, card])\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={path.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.pageContainer}>\r\n            {cards.length > 0 && <LearnCardElement card={card}\r\n                                                      grades={grades}\r\n                                                      checked={isChecked}\r\n                                                      setIsChecked={setIsChecked}\r\n                                                      onNextCard={onNextCard}/>\r\n            }\r\n            {error && <ErrorSnackBar errorMessage={error}/>}\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {path} from '../../00-App/Routes/Routes';\r\n\r\nimport s from './Page404.module.css'\r\n\r\nexport const Page404: React.FC = (props) => {\r\n    return (\r\n        <div className={s.errorPage}>\r\n            <h1>404</h1>\r\n            <span className={s.firstP}>Page not found</span>\r\n            <span className={s.secondP}>Sorry, but the page you were looking for doesn’t exist.</span>\r\n            <span className={s.thirdP}>Go back to\r\n                  <span className={s.item}>\r\n                    <NavLink to={path.PROFILE} activeClassName={s.activeLink}>PROFILE</NavLink>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","import React, {DetailedHTMLProps, HTMLAttributes, useEffect, useState} from 'react';\r\nimport {authSelectors} from '../02-Features/01-Login/00-index';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {path} from '../00-App/Routes/Routes';\r\nimport {appSelectors} from '../00-App/00-index';\r\nimport {setAppStatus} from '../00-App/app-reducer';\r\nimport {getAuthUserData} from '../02-Features/01-Login/auth-reducer';\r\n\r\ntype DivPropsType = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\r\ntype AuthRedirectPagePropsType = DivPropsType & {}\r\n\r\nconst AuthRedirectPage: React.FC<AuthRedirectPagePropsType> = React.memo((\r\n    {\r\n        children,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const user = useSelector(authSelectors.selectorUserData);\r\n    const isLoggedIn = useSelector(authSelectors.selectorIsAuth);\r\n    const error = useSelector(appSelectors.selectorError);\r\n    const [firstRendering, setFirstRendering] = useState<boolean>(true);\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n    const [spin, setSpin] = useState<boolean>(user._id === '0');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (firstRendering) {\r\n            if (isLoggedIn || error) dispatch(setAppStatus({status: 'succeeded', error: null}));\r\n\r\n            if (user._id === '0') {\r\n                dispatch(getAuthUserData());\r\n            }\r\n            setFirstRendering(false); // + rerender\r\n        } else {\r\n            if (!redirect && ((spin && error) || (!spin && user._id === '0'))) {\r\n                setTimeout(() => setRedirect(true), 1500);\r\n            }\r\n            if (isLoggedIn && spin) setSpin(false);\r\n        }\r\n    }, [firstRendering, setFirstRendering, user._id, setRedirect, isLoggedIn, error,\r\n        dispatch, redirect, spin, setSpin]);\r\n\r\n    if (redirect) return <Redirect to={path.LOGIN}/>;\r\n    if (spin) return <div>spin... {error}</div>;\r\n\r\n    return (\r\n        <>\r\n            {/*<Log s={renderLog || \"rendering AuthRedirectPage\"}/>*/}\r\n            <div {...restProps}>\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default AuthRedirectPage;\r\n","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {Profile} from '../../02-Features/04-Profile/Profile';\r\nimport {Login} from '../../02-Features/01-Login/Login';\r\nimport {Registration} from '../../02-Features/02-Registration/Registration';\r\nimport {ResetPassword} from '../../02-Features/03-PasswordRecovery/ResetPassword';\r\nimport {PasswordRecovery} from '../../02-Features/03-PasswordRecovery/PasswordRecovery';\r\nimport {CardPacks} from '../../02-Features/05-CardPacks/CardPacks';\r\nimport {Cards} from '../../02-Features/06-Cards/Cards';\r\nimport {LearningPage} from '../../02-Features/07-Learning/LearningPage';\r\nimport {Page404} from '../../02-Features/08-Page404/Page404';\r\n\r\nimport s from './Routes.module.css'\r\nimport AuthRedirectPage from '../../helpers/AuthRedirectPage';\r\n\r\nexport const path = {\r\n    LOGIN: '/login',\r\n    REG: '/registration',\r\n    PASSWORD_POST: '/newPassword/:token?',\r\n    PASS_REC: '/passwordRecovery',\r\n    PROFILE: '/profile',\r\n    CARD_PACKS: '/card_packs',\r\n    CARDS: '/cards',\r\n    LEARNING: '/learning',\r\n    ALL_COMPONENTS: '/allComponents',\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div className={s.routes}>\r\n            <Switch>\r\n                <Route path='/' exact render={() => <Redirect to={path.PROFILE}/>}/>\r\n                <Route path={path.LOGIN} exact render={() => <Login/>}/>\r\n                <Route path={path.REG} exact render={() => <Registration/>}/>\r\n                <Route path={path.PASSWORD_POST} exact render={() => <ResetPassword/>}/>\r\n                <Route path={path.PASS_REC} exact render={() => <PasswordRecovery/>}/>\r\n                <Route path={path.PROFILE} exact render={() => <AuthRedirectPage><Profile/></AuthRedirectPage>}/>\r\n                <Route path={path.CARD_PACKS} exact render={() => <CardPacks/>}/>\r\n                <Route path={path.CARDS + '/:id'} exact render={() => <Cards/>}/>\r\n                <Route path={path.LEARNING + '/:id'} exact render={() => <LearningPage/>}/>\r\n                <Route path={'/404'} render={() => <Page404/>}/>\r\n                <Redirect from={'*'} to={'/404'}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './NavBar.module.css'\r\nimport Logout from '../../02-Features/01-Login/logout/Logout';\r\nimport {path} from '../../00-App/Routes/Routes';\r\n\r\nexport const NavBar: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={style.header}>\r\n            <input type=\"checkbox\" className={style.openSidebarMenu} id=\"openSidebarMenu\"/>\r\n            <label htmlFor=\"openSidebarMenu\" className={style.sidebarIconToggle}>\r\n                <div className={`${style.spinner} ${style.diagonal} ${style.part1}`}/>\r\n                <div className={`${style.spinner} ${style.horizontal}`}/>\r\n                <div className={`${style.spinner} ${style.diagonal} ${style.part2}`}/>\r\n            </label>\r\n            <div className={style.sidebarMenu}>\r\n                <ul className={style.sidebarMenuInner}>\r\n                    <li><NavLink to={path.LOGIN}>LogIn</NavLink></li>\r\n                    <li><NavLink to={path.REG}>Registration</NavLink></li>\r\n                    <li><NavLink to={path.PASS_REC}>Password recovery</NavLink></li>\r\n                    <li><NavLink to={path.PASSWORD_POST}>New password</NavLink></li>\r\n                    <li><NavLink to={path.PROFILE}>Profile</NavLink></li>\r\n                    <li><NavLink to={path.CARD_PACKS}>Cards Pack</NavLink></li>\r\n                    <li><Logout/></li>\r\n                </ul>\r\n            </div>\r\n            <div className={`${style.main} ${style.center}`}>\r\n                <div className={style.mainInner}>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Logout from '../01-Login/logout/Logout';\r\nimport {NavBar} from '../../03-Components/NavBar/NavBar';\r\nimport {path} from '../../00-App/Routes/Routes';\r\n\r\nimport s from './Header.module.scss'\r\n\r\nexport const Header: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavBar/>\r\n            <div className={s.logo}>\r\n                Study Point\r\n                <span>.</span>\r\n            </div>\r\n            <nav className={s.nav}>\r\n               <span className={s.item}>\r\n                    <NavLink to={path.PROFILE} activeClassName={s.activeLink}>PROFILE</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to={path.CARD_PACKS} activeClassName={s.activeLink}>CARDS PACK</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to={path.LOGIN} activeClassName={s.activeLink}>SIGN IN</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to={path.REG} activeClassName={s.activeLink}>SIGN UP</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to={path.PASS_REC} activeClassName={s.activeLink}>RECOVERY PASSWORD</NavLink>\r\n                </span>\r\n                <span className={s.item}><Logout/></span>\r\n            </nav>\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react';\r\n\r\nimport s from './Preloader.module.css';\r\n\r\nexport const Preloader: React.FC = (props) => {\r\n\r\n    return (\r\n        <div className={s.fullOverlay}>\r\n            <div className={s.loader}>Loading...</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from './store';\r\nimport {Header} from '../02-Features/00-Header/Header';\r\nimport Routes from './Routes/Routes';\r\nimport ErrorSnackBar from '../03-Components/ErrorSnackBar/ErrorSnackBar';\r\nimport {appSelectors} from './00-index';\r\nimport {getAuthUserData} from '../02-Features/01-Login/auth-reducer';\r\nimport s from '../02-Features/05-CardPacks/CardPacks.module.css';\r\nimport Preloader from '../03-Components/Preloader/Preloader';\r\nimport './App.css';\r\n\r\nexport const App: React.FC = () => {\r\n    const appStatus = useSelector<AppStoreType, string>(appSelectors.selectorAppStatus)\r\n    const finalStyle = appStatus === 'loading' ? `${s.fullOverlay} ${s.activeFullOverlay}` : s.fullOverlay\r\n\r\n    const error = useSelector<AppStoreType, string | null>(appSelectors.selectorError)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getAuthUserData())\r\n    }, []);\r\n\r\n    return (\r\n        <div className='App'>\r\n            <div className={finalStyle}></div>\r\n            <Header/>\r\n            <Routes/>\r\n            {error && <ErrorSnackBar errorMessage={error}/>}\r\n            {appStatus === 'loading' && <Preloader/>}\r\n        </div>\r\n    )\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {authReducer} from '../02-Features/01-Login/auth-reducer';\r\nimport {registrationReducer} from '../02-Features/02-Registration/registration-reducer';\r\nimport {appReducer} from './app-reducer';\r\nimport {cardPacksReducer} from '../02-Features/05-CardPacks/cardPacks-reducer';\r\nimport {cardsReducer} from '../02-Features/06-Cards/cards-reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    registration: registrationReducer,\r\n    app: appReducer,\r\n    cardsPack: cardPacksReducer,\r\n    cards: cardsReducer,\r\n})\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './00-App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {store} from './00-App/store';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}