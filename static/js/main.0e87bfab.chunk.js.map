{"version":3,"sources":["00-App/app-reducer.ts","02-Pages/04-Profile/Profile.module.scss","03-Components/Button/FormButton/UniversalButton.tsx","02-Pages/01-Login/Login.module.scss","03-Components/Input/Input.tsx","01-API/api.ts","03-Components/NavBar/NavBar.module.css","01-API/00-login-api.ts","02-Pages/01-Login/auth-reducer.ts","02-Pages/01-Login/01-selectors.ts","02-Pages/04-Profile/FileInput.tsx","03-Components/Button/Button.tsx","02-Pages/04-Profile/ProfilePage.tsx","03-Components/Checkbox/CheckBox.tsx","02-Pages/01-Login/Login.tsx","02-Pages/02-Registration/Registration.tsx","03-Components/Modal/Modal.tsx","03-Components/Modal/ModalForCards/ModalForAddCard.tsx","03-Components/Modal/ModalForCards/ModalForDelete.tsx","03-Components/Modal/ModalForCards/ModalForUpdateCard.tsx","02-Pages/06-Cards/CardElement/CardElement.tsx","02-Pages/06-Cards/01-selectors.ts","02-Pages/06-Cards/CardsPage.tsx","02-Pages/07-Learning/LearnCardElement/LearnCardElement.tsx","02-Pages/07-Learning/LearningPage.tsx","helpers/AuthRedirectPage.tsx","helpers/withSuspence.tsx","03-Components/Paginator/Paginator.tsx","03-Components/DoubleRange/DoubleRange.tsx","03-Components/Modal/ModalForPack/ModalForAddPack.tsx","03-Components/Modal/ModalForCards/ModalForUpdateCardsPack.tsx","02-Pages/05-CardPacks/CardPaksElement/CardPacksElement.tsx","02-Pages/05-CardPacks/01-selectors.ts","02-Pages/05-CardPacks/CardPacksPage.tsx","00-App/Routes/Routes.tsx","02-Pages/00-Header/Header.module.scss","02-Pages/05-CardPacks/CardPaksElement/CardPacksElement.module.css","00-App/01-selectors.ts","01-API/04-cards-api.ts","02-Pages/06-Cards/cards-reducer.ts","01-API/03-cardPacks-api.ts","02-Pages/05-CardPacks/cardPacks-reducer.ts","02-Pages/05-CardPacks/CardPacks.module.css","02-Pages/04-Profile/FileInput.module.scss","03-Components/Modal/Modal.module.css","03-Components/ErrorSnackBar/ErrorSnackBar.module.css","03-Components/Input/Input.module.scss","03-Components/ErrorSnackBar/ErrorSnackBar.tsx","03-Components/Preloader/Preloader.tsx","01-API/01-regestration-api.ts","02-Pages/02-Registration/registration-reducer.ts","02-Pages/06-Cards/Cards.module.css","03-Components/Paginator/Paginator.module.css","03-Components/Checkbox/CheckBox.module.scss","03-Components/Button/FormButton/UniversalButton.module.css","03-Components/Preloader/Preloader.module.css","02-Pages/01-Login/logout/Logout.module.css","03-Components/Button/Button.module.css","02-Pages/06-Cards/CardElement/CardElement.module.css","02-Pages/07-Learning/LearningPage.module.css","00-App/Routes/Routes.module.css","02-Pages/01-Login/logout/Logout.tsx","03-Components/NavBar/NavBar.tsx","02-Pages/00-Header/Header.tsx","00-App/App.tsx","reportWebVitals.ts","00-App/store.ts","index.tsx"],"names":["initialState","initializedSuccess","appState","status","error","appReducer","state","actions","type","setAppStatus","module","exports","UniversalButton","React","memo","red","className","restProps","finalClassName","s","default","Input","value","onChange","onChangeText","onKeyPress","onEnter","placeholder","spanClassName","useState","focus","setFocus","finalLabelStyle","inputLabel","active","finalInputClassName","input","input_wrapper","onFocus","onBlur","e","currentTarget","length","autoComplete","autoCapitalize","key","instance","axios","create","withCredentials","baseURL","authAPI","post","email","password","rememberMe","delete","name","avatar","token","put","isLoggedIn","user","created","isAdmin","publicCardPacksCount","updated","_id","authReducer","action","payload","userData","setIsLoggedIn","setUserData","login","dispatch","a","res","data","response","message","getAuthUserData","logout","info","updateProfileData","tokenName","updatedUser","selectorIsAuth","auth","selectorUserData","selectorUserId","FileInput","n","file","setFile","baseImage","setBaseImage","uploadImage","target","files","convertBase64","base64","useDispatch","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","image_upload","input_label","accept","multiple","photoLoad","btn_image_upload","btn_label","onClick","sentBtn","file_size","size","toFixed","Button","children","disabled","style","button","ProfilePage","useForm","register","handleSubmit","errors","setError","reset","editMode","setEditMode","isAuth","useSelector","authSelectors","profileData","useParams","profile_header","profile_header_cover","profile_header_info","profile_header_info__description","user_avatar","user_avatar__img","src","width","profile_name","form_wrapper","onSubmit","autoFocus","profile_name__input","ref","required","validate","save_name_btn","cancel_btn","profile_settings","verified","edit_name_btn","profile_email","social_links","href","link","backgroundColor","user_state","user_state__item","title","text","to","PATH","LOGIN","CheckBox","onChangeChecked","label","finalCheckboxStyle","checkbox_wrapper","checked","Login","appStatus","appSelectors","selectorAppStatus","setEmail","setPassword","setRememberMe","onclickEmail","useCallback","onclickPassword","onclickHandler","login_page","main_block","welcome_text","headline","text_description","test_data","login_btn","forgot_password","PASS_REC","REG","footer","footer_info","brand","info_text","footer_bottom","footer_bottom__text","Registration","onChangeHandlerEmail","onChangeHandlerPassword","registrationTC","inactive","ModalWindow","setActive","modal","modalActive","modalContent","modalContentActive","stopPropagation","btn","ModalForAddCards","addCardHandler","setNewQuestionCard","setNewAnswerCard","setTypeNewCard","ModalForDelete","deleteModalHandlerYes","ModalForUpdateCard","setQuestionCard","setAnswerCard","updateModalHandler","CardElement","card","updateCard","removeCard","activeModalDelete","setActiveModalDelete","activeModalUpdate","setActiveModalUpdate","questionCard","answerCard","userId","question","answer","grade","user_id","cardsPack_id","rating","selectorCards","cards","CardsPage","id","activeModalAdd","setActiveModalAdd","newQuestionCard","newAnswerCard","typeNewCard","serverNum","cardTestObj","Date","getTime","changeCard","deleteCard","useEffect","getCards","mappedCards","map","cardsPage","cardsBlock","search","addCard","LearnCardElement","setIsChecked","onNextCard","grades","mappedButton","el","i","getRandomCard","sum","reduce","acc","rand","Math","random","newSum","console","log","LearningPage","cardsSelectors","selectorError","firstCard","setFirstCard","isChecked","setCard","sendGrade","alert","pageContainer","ErrorSnackBar","errorMessage","AuthRedirectPage","firstRendering","setFirstRendering","redirect","setRedirect","spin","setSpin","setTimeout","withSuspense","WrappedComponent","props","Suspense","fallback","Preloader","Paginator","currentPage","onPageChanged","pageSize","totalItemsCount","portionSize","pageCount","ceil","pages","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","usersPageNumber","filter","p","classnames","selected","pageNumber","DoubleRange","range","setRange","values","step","min","max","renderTrack","onMouseDown","onTouchStart","height","display","margin","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","index","isDragged","boxShadow","position","top","color","fontWeight","fontSize","fontFamily","padding","ModalForAddPack","addPackHandler","setNamePack","setTypeNewPack","ModalForUpdateCardsPack","setTitleCard","CardPacksElement","pack","updateCardPacks","removeCardPacks","titleCard","course","coursePreview","CARDS","activeClassName","fas","faChevronRight","courseInfo","progressContainer","cardsCount","btnWrapper","LEARNING","selectorCardPacks","cardsPack","cardPacks","selectorFilter","selectorPacksTotalCount","packsTotalCount","selectorCurrentPage","selectorPageSize","selectorEditMode","showAll","CardPacksPage","inputValue","setInputValue","namePack","typeNewPack","getCardPacks","filtered","packName","changeCardPacks","deleteCardPacks","mappedPacks","dataForm","showMode","cardPacksTable","addCardPacks","PASSWORD_POST","PROFILE","CARD_PACKS","ALL_COMPONENTS","PasswordRecovery","lazy","ResetPassword","Page404","Routes","app_container","path","exact","render","from","app","cardsAPI","get","cardId","card_id","page","cardsTotalCount","packUserId","cardsReducer","newCard","setGrade","cardsPackId","packId","updatedCard","deletedCard","cardID","newGrade","cardPacksAPI","cardPacksReducer","newPacks","setFilter","requestPage","cardPacksTotalCount","getState","notification","closeNotification","close","fullOverlay","loader","registrationAPI","dataReg","isRedirect","registrationReducer","regData","setRegistrationAC","dataAboutUser","addedUser","Object","keys","in","isEmailValid","isPassValid","passwordRegExp","Logout","logoutForm","NavBar","header","openSidebarMenu","htmlFor","sidebarIconToggle","spinner","diagonal","part1","horizontal","part2","sidebarMenu","sidebarMenuInner","main","center","mainInner","Header","logo","nav","item","activeLink","App","finalStyle","activeFullOverlay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","registration","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e87bfab.chunk.js","sourcesContent":["import {ThunkDispatch} from 'redux-thunk';\r\nimport {AppStoreType} from './store';\r\nimport {getAuthUserData} from '../02-Pages/01-Login/auth-reducer';\r\n\r\ntype ActionsType = ReturnType<typeof setAppStatus> | ReturnType<typeof initializedSuccess>\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState = {\r\n    initializedSuccess: false,\r\n    appState: {\r\n        status: 'idle',\r\n        error: null as string | null\r\n    } as AppState\r\n}\r\n\r\nexport type AppState = {\r\n    status: RequestStatusType,\r\n    error: null | string\r\n}\r\n\r\ntype AppInitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: AppInitialStateType = initialState, actions: ActionsType): AppInitialStateType => {\r\n    switch (actions.type) {\r\n        case 'CARDS/APP/SET-APP-STATUS':\r\n            return {...state, appState: actions.state}\r\n        case 'CARDS/APP/INITIALIZED_SUCCESS': {\r\n            return {...state, initializedSuccess: true}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAppStatus = (state: AppState) => ({\r\n    type: 'CARDS/APP/SET-APP-STATUS', state\r\n} as const)\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: 'CARDS/APP/INITIALIZED_SUCCESS'\r\n} as const)\r\n\r\nexport const initializeApp = () => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n    try {\r\n        await dispatch(getAuthUserData())\r\n        dispatch(initializedSuccess)\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_header\":\"Profile_profile_header__4ocZA\",\"profile_header_cover\":\"Profile_profile_header_cover__zhbc-\",\"profile_header_info\":\"Profile_profile_header_info__2pIQT\",\"profile_header_info__description\":\"Profile_profile_header_info__description__10kbM\",\"profile_name\":\"Profile_profile_name__2kZBx\",\"verified\":\"Profile_verified__389Sy\",\"form_wrapper\":\"Profile_form_wrapper__2p94E\",\"profile_name__input\":\"Profile_profile_name__input__2wu9l\",\"save_name_btn\":\"Profile_save_name_btn__2xkib\",\"cancel_btn\":\"Profile_cancel_btn__2-Ioc\",\"profile_settings\":\"Profile_profile_settings__2WGy-\",\"edit_name_btn\":\"Profile_edit_name_btn__3u0lj\",\"profile_email\":\"Profile_profile_email__3hg7V\",\"user_avatar\":\"Profile_user_avatar__36pwC\",\"user_avatar__img\":\"Profile_user_avatar__img__2UmRf\",\"social_links\":\"Profile_social_links__3-U9b\",\"link\":\"Profile_link__32fWE\",\"user_state\":\"Profile_user_state__3kooO\",\"user_state__item\":\"Profile_user_state__item__1lGFq\",\"title\":\"Profile_title__1c0Pc\",\"text\":\"Profile_text__CfT8y\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport s from './UniversalButton.module.css';\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nexport const UniversalButton: React.FC<SuperButtonPropsType> = React.memo((\r\n    {\r\n        red, className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n        />\r\n    )\r\n})\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_page\":\"Login_login_page__z-r5Z\",\"main_block\":\"Login_main_block__1nLYR\",\"welcome_text\":\"Login_welcome_text__3iS-g\",\"headline\":\"Login_headline__3fhyN\",\"title\":\"Login_title__6JNCJ\",\"text_description\":\"Login_text_description__ekGBq\",\"login\":\"Login_login__3VPYT\",\"test_data\":\"Login_test_data__1XuwQ\",\"login_error\":\"Login_login_error__3BMxX\",\"form_wrapper\":\"Login_form_wrapper__3LbxA\",\"login_btn\":\"Login_login_btn__24o1V\",\"forgot_password\":\"Login_forgot_password__3e9OC\",\"footer\":\"Login_footer__Ud04R\",\"footer_info\":\"Login_footer_info__1o-y8\",\"brand\":\"Login_brand__XVQuC\",\"info_text\":\"Login_info_text__12094\",\"footer_bottom\":\"Login_footer_bottom__2pP-3\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from 'react';\r\nimport s from './Input.module.scss';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    placeholder?: string\r\n};\r\n\r\nexport const Input: React.FC<SuperInputTextPropsType> = React.memo((\r\n    {\r\n        value,\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        placeholder,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const [focus, setFocus] = useState<boolean>(false)\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        e.key === 'Enter'\r\n        && onEnter\r\n        && onEnter();\r\n    }\r\n\r\n    const finalLabelStyle = `${s.inputLabel} ${focus ? s.active : ''}`;\r\n    const finalInputClassName = `${className} ${s.input}`\r\n\r\n    return (\r\n        <p className={s.input_wrapper}>\r\n            <label className={finalLabelStyle}>{placeholder}</label>\r\n            <input\r\n                onFocus={() => setFocus(true)}\r\n                onBlur={(e) => e.currentTarget.value.length !== 0 ? '' : setFocus(false)}\r\n                autoComplete='new-password'\r\n                autoCapitalize='off'\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                type={type}\r\n                {...restProps}\r\n            />\r\n        </p>\r\n    )\r\n})\r\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n     // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n})\r\n\r\nexport type APIResponseType<D = {}> = {\r\n    data: D\r\n    statusText: string\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"NavBar_header__1wuPw\",\"mainInner\":\"NavBar_mainInner__3bKi3\",\"sidebarMenu\":\"NavBar_sidebarMenu__1HnFp\",\"sidebarMenuInner\":\"NavBar_sidebarMenuInner__OyR6W\",\"openSidebarMenu\":\"NavBar_openSidebarMenu__C92db\",\"sidebarIconToggle\":\"NavBar_sidebarIconToggle__3Z12O\",\"spinner\":\"NavBar_spinner__rLQ0M\",\"horizontal\":\"NavBar_horizontal__1M9ZO\",\"diagonal\":\"NavBar_diagonal__1YOHI\",\"part1\":\"NavBar_part1__3sA7n\",\"part2\":\"NavBar_part2__1LndU\"};","import {instance} from './api';\r\nimport {UserDataType} from '../02-Pages/01-Login/auth-reducer';\r\n\r\ntype UpdateUserResponse = {\r\n    token: string\r\n    updatedUser: UserDataType\r\n}\r\n\r\nexport const authAPI = {\r\n\r\n    getAuth() {\r\n        return instance.post<UserDataType>(`auth/me`)\r\n    },\r\n\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<UserDataType>('auth/login', {email, password, rememberMe})\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete('auth/me')\r\n    },\r\n\r\n    updateProfileData(name?: string, avatar?: string, token?: string) {\r\n        return instance.put<UpdateUserResponse>('auth/me', {name, avatar, token})\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {Dispatch} from 'redux';\r\nimport {authAPI} from '../../01-API/00-login-api';\r\nimport {setAppStatus} from '../../00-App/app-reducer';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {AppStoreType} from '../../00-App/store';\r\n\r\ntype ActionsType = ReturnType<typeof setIsLoggedIn>\r\n    | ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setUserData>\r\n    | ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof updateUserProfile>\r\n\r\nexport type UserDataType = {\r\n    avatar: string,\r\n    created: number,\r\n    email: string,\r\n    isAdmin: boolean,\r\n    name: string,\r\n    publicCardPacksCount: number,\r\n    rememberMe: boolean,\r\n    token: string,\r\n    updated: number,\r\n    _id: string,\r\n}\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    user: {\r\n        avatar: '',\r\n        created: 5,\r\n        email: '',\r\n        isAdmin: false,\r\n        name: '',\r\n        publicCardPacksCount: 0,\r\n        rememberMe: false,\r\n        token: '',\r\n        updated: 5,\r\n        _id: '',\r\n    }\r\n}\r\n\r\ntype AuthInitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: AuthInitialStateType = initialState, action: ActionsType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case 'CARDS/LOGIN/SET_IS_AUTH':\r\n            return {...state, isLoggedIn: action.payload.isLoggedIn}\r\n        case 'CARDS/LOGIN/SET_USER_DATA':\r\n            return {...state, user: action.payload.userData}\r\n        case  'CARDS/LOGIN/UPDATE_PROFILE':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    name: action.payload.user.name,\r\n                    avatar: action.payload.user.avatar\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsLoggedIn = (isLoggedIn: boolean) => ({\r\n    type: 'CARDS/LOGIN/SET_IS_AUTH', payload: {\r\n        isLoggedIn\r\n    }\r\n}) as const\r\n\r\nexport const setUserData = (userData: UserDataType) => ({\r\n    type: 'CARDS/LOGIN/SET_USER_DATA', payload: {\r\n        userData\r\n    }\r\n}) as const\r\n\r\nexport const updateUserProfile = (user: UserDataType) => ({\r\n    type: 'CARDS/LOGIN/UPDATE_PROFILE', payload: {\r\n        user\r\n    }\r\n} as const)\r\n\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await authAPI.login(email, password, rememberMe)\r\n        dispatch(setUserData(res.data))\r\n        dispatch(setIsLoggedIn(true))\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await authAPI.getAuth()\r\n        dispatch(setUserData(res.data))\r\n        dispatch(setIsLoggedIn(true))\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await authAPI.logout()\r\n        dispatch(setIsLoggedIn(false))\r\n        dispatch(setAppStatus({status: 'succeeded', error: res.data.info}))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const updateProfileData = (name?: string, avatar?: string, tokenName?: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n        dispatch(setAppStatus({status: 'loading', error: null}))\r\n        try {\r\n            const res = await authAPI.updateProfileData(name, avatar, tokenName)\r\n            dispatch(updateUserProfile(res.data.updatedUser))\r\n            dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n            dispatch(setAppStatus({status: 'failed', error: error}))\r\n        }\r\n    }\r\n\r\n\r\n\r\n","import {AppStoreType} from '../../00-App/store';\r\n\r\nexport const selectorIsAuth = (state: AppStoreType) => state.auth.isLoggedIn\r\nexport const selectorUserData = (state: AppStoreType) => state.auth.user\r\nexport const selectorUserId = (state: AppStoreType) => state.auth.user._id\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './FileInput.module.scss'\r\nimport {updateProfileData} from '../01-Login/auth-reducer';\r\nimport {useDispatch} from 'react-redux';\r\n\r\ninterface IFileInputProps {\r\n\r\n}\r\n\r\nconst FileInput: React.FC<IFileInputProps> = () => {\r\n\r\n    const [file, setFile] = useState<any>();\r\n    const [baseImage, setBaseImage] = useState<any>()\r\n\r\n    const uploadImage = async (e: ChangeEvent<HTMLInputElement>) => {\r\n        const file = e.target.files && e.target.files[0]\r\n        if (file) {\r\n            setFile(file)\r\n        }\r\n        const base64 = await convertBase64(file)\r\n        setBaseImage(base64)\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const updateProfile = () => {\r\n        dispatch(updateProfileData('', baseImage))\r\n        setBaseImage('')\r\n    }\r\n\r\n    const convertBase64 = (file: any) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader()\r\n            fileReader.readAsDataURL(file)\r\n\r\n            fileReader.onload = (() => {\r\n                resolve(fileReader.result)\r\n            })\r\n\r\n            fileReader.onerror = ((error) => {\r\n                reject(error)\r\n            })\r\n        })\r\n    }\r\n\r\n    const returnFileSize = (n: number) => {\r\n        if (n < 1024) {\r\n            return n + 'bytes';\r\n        } else if (n > 1024 && n < 1048576) {\r\n            return (n / 1024).toFixed(2) + 'KB';\r\n        } else if (n > 1048576) {\r\n            return (n / 1048576).toFixed(2) + 'MB';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={s.image_upload}>\r\n                <label className={s.input_label}>\r\n                    <input type=\"file\"\r\n                           accept=\".jpg, .jpeg, .png\"\r\n                           multiple\r\n                           className={s.photoLoad}\r\n                           onChange={(e) => {\r\n                               e.currentTarget.value.length !== 0 &&\r\n                               uploadImage(e)\r\n                           }}/>\r\n                </label>\r\n            </div>\r\n            {baseImage &&\r\n                <div className={s.btn_image_upload}>\r\n                    <label className={s.btn_label}>\r\n                        {\r\n                            <input onClick={updateProfile} className={s.sentBtn}/>\r\n                        }\r\n                        <span className={s.file_size}>{file && returnFileSize(file.size)}</span>\r\n                    </label>\r\n                </div>\r\n            }\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default FileInput;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport style from \"./Button.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype ButtonPropsType = DefaultInputPropsType & {}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({children,onClick, className, disabled}) => {\r\n\r\n    return <button className={`${style.button} ${className}`} disabled={disabled} onClick={onClick}>{children}</button>\r\n\r\n}\r\n\r\nexport default Button;\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {authSelectors} from '../01-Login/00-index';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {PATH} from '../../00-App/Routes/Routes';\r\nimport s from './Profile.module.scss'\r\nimport {updateProfileData, UserDataType} from '../01-Login/auth-reducer';\r\nimport FileInput from './FileInput';\r\nimport {useForm} from 'react-hook-form';\r\nimport Button from '../../03-Components/Button/Button';\r\n\r\nexport const ProfilePage: React.FC = React.memo(() => {\r\n\r\n    const {register, handleSubmit, errors, setError, reset} = useForm();\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    const isAuth = useSelector<AppStoreType, boolean>(authSelectors.selectorIsAuth)\r\n    const profileData = useSelector<AppStoreType, UserDataType | null>(authSelectors.selectorUserData)\r\n\r\n    const {token} = useParams<Record<string, string | undefined>>();\r\n    const tokenName = token ? token : ''\r\n\r\n    const dispatch = useDispatch()\r\n    const onSubmit = (data: { name: string }, e: any) => {\r\n        dispatch(updateProfileData(data.name, '', tokenName))\r\n        setEditMode(false)\r\n    }\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile_header}>\r\n            <div className={s.profile_header_cover}/>\r\n            <div className={s.profile_header_info}>\r\n                <div className={s.profile_header_info__description}>\r\n                    <div className={s.user_avatar}>\r\n                        <img className={s.user_avatar__img}\r\n                             src={profileData! && profileData.avatar}\r\n                             width={'200px'}\r\n                        />\r\n                        <FileInput/>\r\n                    </div>\r\n                    <div className={s.profile_name}>\r\n                        {\r\n                            editMode\r\n                                ? <form className={s.form_wrapper} onSubmit={handleSubmit(onSubmit)}>\r\n                                    <input name='name'\r\n                                           type=\"text\"\r\n                                           placeholder={'Enter name'}\r\n                                           autoFocus\r\n                                           className={s.profile_name__input}\r\n                                           ref={register({\r\n                                               required: true,\r\n                                               validate: value => value.length >= 2\r\n                                           })}\r\n                                    />\r\n                                    <Button className={s.save_name_btn}>Save</Button>\r\n                                    <Button className={s.cancel_btn} onClick={() => setEditMode(false)}>Cancel</Button>\r\n                                </form>\r\n                                : <div className={s.profile_settings}>\r\n                                    <span className={s.verified}/>\r\n                                    <span>{profileData && profileData.name}</span>\r\n                                    <Button className={s.edit_name_btn} onClick={() => setEditMode(true)}\r\n                                    >Edit Name</Button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    <div className={s.profile_email}\r\n                    > {errors.name && 'Your last name is less than 2 characters'}\r\n                    </div>\r\n                </div>\r\n                <div className={s.social_links}>\r\n                    <a href=\"#\" className={s.link}>Link</a>\r\n                    <a href=\"#\" className={s.link} style={{backgroundColor: '#1abcff'}}>Link</a>\r\n                    <a href=\"#\" className={s.link} style={{backgroundColor: '#f8468d'}}>Link</a>\r\n                    <a href=\"#\" className={s.link} style={{backgroundColor: '#7b5dfa'}}>Link</a>\r\n                    <a href=\"#\" className={s.link} style={{backgroundColor: '#fd434f'}}>Link</a>\r\n                    <a href=\"#\" className={s.link} style={{backgroundColor: '#00e194'}}>Link</a>\r\n                </div>\r\n                <div className={s.user_state}>\r\n                    <div className={s.user_state__item}>\r\n                        <p className={s.title}>{profileData && profileData.publicCardPacksCount}</p>\r\n                        <p className={s.text}>PACKS</p>\r\n                    </div>\r\n                    <div className={s.user_state__item}>\r\n                        <p className={s.title}>{profileData && profileData.publicCardPacksCount}</p>\r\n                        <p className={s.text}>PACKS</p>\r\n                    </div>\r\n                    <div className={s.user_state__item}>\r\n                        <p className={s.title}>{profileData && profileData.publicCardPacksCount}</p>\r\n                        <p className={s.text}>PACKS</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, useState} from 'react';\r\nimport s from './CheckBox.module.scss';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    label?: string\r\n};\r\n\r\nexport const CheckBox: React.FC<SuperCheckboxPropsType> = React.memo((\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n        label,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalLabelStyle = `${s.label} ${className ? className : ''}`;\r\n    const finalCheckboxStyle = `${className}`\r\n\r\n    return (\r\n        <p className={s.checkbox_wrapper}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalCheckboxStyle}\r\n\r\n                {...restProps}\r\n            />\r\n            <label className={finalLabelStyle}>{label}</label>\r\n        </p>\r\n    )\r\n})\r\n","import React, {ChangeEvent, useCallback, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {UniversalButton} from '../../03-Components/Button/FormButton/UniversalButton';\r\nimport {PATH} from '../../00-App/Routes/Routes';\r\nimport s from './Login.module.scss';\r\nimport {Input} from '../../03-Components/Input/Input';\r\nimport {CheckBox} from '../../03-Components/Checkbox/CheckBox';\r\nimport {appSelectors} from '../../00-App/00-index';\r\nimport {selectorIsAuth} from './01-selectors';\r\nimport {login} from './auth-reducer';\r\n\r\ntype LoginPropsType = {}\r\n\r\nexport const Login: React.FC<LoginPropsType> = React.memo(() => {\r\n    const isAuth = useSelector<AppStoreType, boolean>(selectorIsAuth)\r\n    const appStatus = useSelector<AppStoreType, string>(appSelectors.selectorAppStatus)\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const onclickEmail = useCallback((e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value), [setEmail])\r\n    const onclickPassword = useCallback((e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value), [setPassword])\r\n\r\n    const dispatch = useDispatch()\r\n    const onclickHandler = useCallback(() => {\r\n        dispatch(login(email, password, rememberMe))\r\n    }, [email, password, rememberMe, dispatch])\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.login_page}>\r\n            <div className={s.main_block}>\r\n                <div className={s.welcome_text}>\r\n                    <div className={s.headline}>welcome to</div>\r\n                    <div className={s.title}>packs</div>\r\n                    <p className={s.text_description}>Learn effectively using pictures, videos, and chat with your\r\n                        friends. Share your progress with others and follow the progress of your friends by viewing\r\n                        their profile!</p>\r\n                </div>\r\n                <div className={s.login}>\r\n                    <h1>Account Login</h1>\r\n                    <div className={s.test_data}>\r\n                        <p>test email: nya-admin@nya.nya</p>\r\n                        <p>test password: 1qazxcvBG</p>\r\n                    </div>\r\n                    {/*<div className={s.login_error}>*/}\r\n                    {/*    <strong>Error</strong>*/}\r\n                    {/*    :Error message this*/}\r\n                    {/*</div>*/}\r\n                    <div className={s.form_wrapper}>\r\n                        <Input type={'email'}\r\n                               placeholder={'Email Address'}\r\n                               onChange={onclickEmail}/>\r\n                        <Input type={'password'}\r\n                               placeholder={'Password'}\r\n                               onChange={onclickPassword}/>\r\n                        <CheckBox onChangeChecked={setRememberMe} label='Remember me'/>\r\n                        <button disabled={appStatus === 'loading'}\r\n                                className={s.login_btn}\r\n                                onClick={onclickHandler}> Log in\r\n                        </button>\r\n                        <p className={s.forgot_password}><NavLink to={PATH.PASS_REC}>Lost your password?</NavLink></p>\r\n                        <p className={s.forgot_password}><NavLink to={PATH.REG}>Create an Account.</NavLink></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.footer}>\r\n                <div className={s.footer_info}>\r\n                    <p className={s.brand}>cards</p>\r\n                    <p className={s.info_text}>This is a flashcard learning app designed for more effective and\r\n                        interactive learning.</p>\r\n                </div>\r\n                <div className={s.footer_bottom}>\r\n                    <p className={s.footer_bottom__text}>\r\n                        2021, Sergey Kuharyonok App\r\n                    </p>\r\n                    <p className={s.footer_bottom__text}>\r\n                        React + Redux + Scss\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import React, {ChangeEvent, useCallback, useState} from 'react';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {registrationTC} from './registration-reducer';\r\nimport {PATH} from '../../00-App/Routes/Routes';\r\nimport {Input} from '../../03-Components/Input/Input';\r\nimport {UniversalButton} from '../../03-Components/Button/FormButton/UniversalButton';\r\n\r\nimport s from '../01-Login/Login.module.scss';\r\nimport {CheckBox} from '../../03-Components/Checkbox/CheckBox';\r\nimport {appSelectors} from '../../00-App/00-index';\r\nimport {authSelectors} from '../01-Login/00-index';\r\n\r\nexport const Registration: React.FC = React.memo(() => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n\r\n    const isAuth = useSelector(authSelectors.selectorIsAuth)\r\n    const appStatus = useSelector<AppStoreType, string>(appSelectors.selectorAppStatus)\r\n    const onChangeHandlerEmail = useCallback((e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value), [])\r\n    const onChangeHandlerPassword = useCallback((e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value), [])\r\n\r\n    const dispatch = useDispatch()\r\n    const onClickHandler = () => (dispatch(registrationTC({email, password})))\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>CREATE A NEW ACCOUNT</h4>\r\n            <div>\r\n                <Input type={'text'}\r\n                       value={email}\r\n                       onChange={onChangeHandlerEmail}\r\n                       placeholder={'Email'}/>\r\n                <Input type={'password'}\r\n                       value={password}\r\n                       onChange={onChangeHandlerPassword}\r\n                       placeholder={'Password'}/>\r\n                <CheckBox>I agree to the Terms of Service and Privacy Policy</CheckBox>\r\n                <UniversalButton onClick={onClickHandler}\r\n                                 disabled={appStatus === 'loading'}> SIGN UP </UniversalButton>\r\n                <hr/>\r\n                <p>Already registered? <NavLink to={PATH.LOGIN}\r\n                                                className={s.inactive}>Sign in to your account.</NavLink></p>\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport s from './Modal.module.css'\r\n\r\ntype ModalPropsType = {\r\n    active: boolean,\r\n    setActive: (active: boolean) => void\r\n}\r\n\r\nexport const ModalWindow: React.FC<ModalPropsType> = ({active, setActive, children}) => {\r\n    return (\r\n        <div className={active ? `${s.modal} + ${s.modalActive}` : s.modal} onClick={() => setActive(false)}>\r\n            <div className={active ? `${s.modalContent} + ${s.modalContentActive}` : s.modalContent}\r\n                 onClick={(e) => e.stopPropagation()}>\r\n                <button className={s.btn} onClick={() => setActive(false)}>x</button>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport {ModalWindow} from '../Modal';\r\nimport {Input} from '../../Input/Input';\r\nimport {UniversalButton} from '../../Button/FormButton/UniversalButton';\r\n\r\ntype ModalAddPropsType = {\r\n    active: boolean,\r\n    setActive: (active: boolean) => void\r\n    addCardHandler: () => void,\r\n    setNewQuestionCard: (q: string) => void,\r\n    setNewAnswerCard: (q: string) => void,\r\n    setTypeNewCard: (t: string) => void\r\n}\r\n\r\nexport const ModalForAddCards: React.FC<ModalAddPropsType> = React.memo((\r\n    {\r\n        active,\r\n        setActive,\r\n        addCardHandler,\r\n        setNewQuestionCard,\r\n        setNewAnswerCard,\r\n        setTypeNewCard\r\n    }\r\n) => {\r\n\r\n    const handlerForAddQuestionCard = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewQuestionCard(e.currentTarget.value)\r\n\r\n    }\r\n    const handlerForAddAnswerCard = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewAnswerCard(e.currentTarget.value)\r\n\r\n    }\r\n    const handlerForAddTypeCard = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTypeNewCard(e.currentTarget.value)\r\n\r\n    }\r\n    const addCardHandlerCancel = () => {\r\n        setActive(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <ModalWindow active={active} setActive={setActive}>\r\n                <h4>ADD NEW CARD</h4>\r\n                <p>QUESTION</p><Input type={'text'}\r\n                                      onChange={handlerForAddQuestionCard}\r\n                                      placeholder={'Write your question here'}/>\r\n                <p>ANSWER</p> <Input type={'text'}\r\n                                     onChange={handlerForAddAnswerCard}\r\n                                     placeholder={'Be sure to specify the answer'}/>\r\n                <p>TYPE</p> <Input type={'text'} onChange={handlerForAddTypeCard}\r\n                                   placeholder={'Specify a type'}/>\r\n                <UniversalButton onClick={addCardHandler}>ADD</UniversalButton>\r\n                <UniversalButton onClick={addCardHandlerCancel}>Cancel</UniversalButton>\r\n            </ModalWindow>\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport {ModalWindow} from '../Modal';\r\nimport {UniversalButton} from '../../Button/FormButton/UniversalButton';\r\n\r\ntype ModalDeletePropsType = {\r\n    active: boolean,\r\n    setActive: (active: boolean) => void,\r\n    deleteModalHandlerYes: () => void\r\n}\r\n\r\nexport const ModalForDelete: React.FC<ModalDeletePropsType> = React.memo((\r\n    {\r\n        deleteModalHandlerYes,\r\n        setActive,\r\n        active\r\n    }\r\n) => {\r\n    const deleteModalHandlerNo = () => {\r\n        setActive(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <ModalWindow active={active} setActive={setActive}>\r\n                <h4>ARE YOU SURE?</h4>\r\n                <UniversalButton onClick={deleteModalHandlerYes}>Yes</UniversalButton>\r\n                <UniversalButton onClick={deleteModalHandlerNo}>No</UniversalButton>\r\n            </ModalWindow>\r\n        </div>\r\n    )\r\n})\r\n","import React, {ChangeEvent} from 'react';\r\nimport {ModalWindow} from '../Modal';\r\nimport {Input} from '../../Input/Input';\r\nimport {UniversalButton} from '../../Button/FormButton/UniversalButton';\r\n\r\ntype ModalUpdatePropsType = {\r\n    active: boolean,\r\n    setActive: (active: boolean) => void,\r\n    setQuestionCard: (q: string) => void,\r\n    setAnswerCard: (a: string) => void,\r\n    updateModalHandler: () => void\r\n}\r\n\r\nexport const ModalForUpdateCard: React.FC<ModalUpdatePropsType> = React.memo((\r\n    {\r\n        setActive,\r\n        active,\r\n        setQuestionCard,\r\n        setAnswerCard,\r\n        updateModalHandler\r\n    }\r\n) => {\r\n    const handlerForUpdateQuestionCard = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestionCard(e.currentTarget.value)\r\n    }\r\n    const handlerForUpdateAnswerCard = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswerCard(e.currentTarget.value)\r\n    }\r\n    const updateModalHandlerCancel = () => {\r\n        setActive(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ModalWindow active={active} setActive={setActive}>\r\n                <h4>YOU CAN DO SOME CHANGES</h4>\r\n                <Input type={'text'} onChange={handlerForUpdateQuestionCard}\r\n                       placeholder={'Here you can update question'}/>\r\n                <Input type={'text'} onChange={handlerForUpdateAnswerCard}\r\n                       placeholder={'Here you can update answer'}/>\r\n                <UniversalButton onClick={updateModalHandler}>Update</UniversalButton>\r\n                <UniversalButton onClick={updateModalHandlerCancel}>Cancel</UniversalButton>\r\n            </ModalWindow>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React, {useState} from 'react';\r\nimport {CardType} from '../cards-reducer';\r\nimport Button from '../../../03-Components/Button/Button';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport s from './CardElement.module.css'\r\nimport {AppStoreType} from '../../../00-App/store';\r\nimport {ModalForDelete} from '../../../03-Components/Modal/ModalForCards/ModalForDelete';\r\nimport {ModalForUpdateCard} from '../../../03-Components/Modal/ModalForCards/ModalForUpdateCard';\r\nimport {authSelectors} from '../../01-Login/00-index';\r\n\r\ntype CardPropsType = {\r\n    card: CardType\r\n    updateCard: (card: CardType) => void\r\n    removeCard: (id: string) => void\r\n}\r\n\r\nexport const CardElement: React.FC<CardPropsType> = React.memo((\r\n    {\r\n        card,\r\n        updateCard,\r\n        removeCard\r\n    }) => {\r\n\r\n    //for modal\r\n    const [activeModalDelete, setActiveModalDelete] = useState<boolean>(false)\r\n    const [activeModalUpdate, setActiveModalUpdate] = useState<boolean>(false)\r\n    const [questionCard, setQuestionCard] = useState<string>('')\r\n    const [answerCard, setAnswerCard] = useState<string>('')\r\n\r\n    //for disabled\r\n    const userId = useSelector<AppStoreType, string | undefined>(authSelectors.selectorUserId)\r\n\r\n    //for delete\r\n    const deleteModalHandlerYes = () => {\r\n        removeCard(card._id)\r\n    }\r\n\r\n    //for update\r\n    const updateModalHandler = () => {\r\n        updateCard({\r\n            _id: card._id,\r\n            type: 'Java',\r\n            question: questionCard,\r\n            answer: answerCard,\r\n            cardsPack_id: card.cardsPack_id,\r\n            grade: 4.54654,\r\n            rating: 0\r\n        })\r\n        setActiveModalUpdate(false)\r\n    }\r\n\r\n    const onUpdateHandler = () => {\r\n        setActiveModalUpdate(true)\r\n    }\r\n\r\n    const onRemoveHandler = () => {\r\n        setActiveModalDelete(true)\r\n    }\r\n\r\n    return (\r\n        <div className={s.card}>\r\n            <h5>{card.question ? card.question : 'empty question'}</h5>\r\n            <p>{card.answer ? card.answer : 'empty answer'}</p>\r\n            <p>type of card: {card.type ? card.type : 'empty type'} </p>\r\n            <p>grade: </p>\r\n            <p>{card.grade}</p>\r\n            <Button onClick={onUpdateHandler} disabled={card.user_id !== userId}>Update</Button>\r\n            <Button onClick={onRemoveHandler} disabled={card.user_id !== userId}>Delete</Button>\r\n\r\n            <ModalForDelete active={activeModalDelete}\r\n                            setActive={setActiveModalDelete}\r\n                            deleteModalHandlerYes={deleteModalHandlerYes}/>\r\n\r\n            <ModalForUpdateCard active={activeModalUpdate}\r\n                                setActive={setActiveModalUpdate}\r\n                                setQuestionCard={setQuestionCard}\r\n                                setAnswerCard={setAnswerCard}\r\n                                updateModalHandler={updateModalHandler}/>\r\n        </div>\r\n    )\r\n})\r\n","import {AppStoreType} from '../../00-App/store';\r\n\r\nexport const selectorCards = (state: AppStoreType) => state.cards.cards\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport s from './Cards.module.css'\r\nimport {addCard, CardType, deleteCard, getCards, updateCard} from './cards-reducer';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {PATH} from '../../00-App/Routes/Routes';\r\nimport {ModalForAddCards} from '../../03-Components/Modal/ModalForCards/ModalForAddCard';\r\nimport {CardElement} from './CardElement/CardElement';\r\nimport {UniversalButton} from '../../03-Components/Button/FormButton/UniversalButton';\r\nimport {selectorCards} from './01-selectors';\r\nimport {authSelectors} from '../01-Login/00-index';\r\n\r\nexport const CardsPage: React.FC = React.memo(() => {\r\n\r\n    const {id} = useParams<{ id: string }>();\r\n    const cards = useSelector<AppStoreType, CardType[]>(selectorCards)\r\n\r\n    const [activeModalAdd, setActiveModalAdd] = useState<boolean>(false)\r\n    const [newQuestionCard, setNewQuestionCard] = useState<string>('')\r\n    const [newAnswerCard, setNewAnswerCard] = useState<string>('')\r\n    const [typeNewCard, setTypeNewCard] = useState<string>('undefined')\r\n\r\n    const isAuth = useSelector<AppStoreType, boolean>(authSelectors.selectorIsAuth)\r\n\r\n\r\n    const onSearch = () => {\r\n        // dispatch(getCards({packName: inputValue, min: range[0], max: range[1]}))\r\n    }\r\n\r\n    function genID(serverNum: number) {\r\n        return (serverNum + '' + (new Date).getTime());\r\n    }\r\n\r\n    const cardTestObj: CardType = {\r\n        _id: genID(2),\r\n        type: typeNewCard,\r\n        question: newQuestionCard,\r\n        answer: newAnswerCard,\r\n        cardsPack_id: id,\r\n        grade: 4.54654,\r\n        rating: 0\r\n    }\r\n\r\n    const onAddCard = () => {\r\n        setActiveModalAdd(true)\r\n    }\r\n\r\n    const changeCard = (card: CardType) => {\r\n        dispatch(updateCard(card))\r\n    }\r\n    const addCardHandler = () => {\r\n        dispatch(addCard(cardTestObj))\r\n        setActiveModalAdd(false)\r\n    }\r\n    const removeCard = (id: string) => {\r\n        dispatch(deleteCard(id))\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getCards(id))\r\n    }, [])\r\n\r\n    if (!isAuth) return <Redirect to={PATH.LOGIN}/>\r\n    const mappedCards = cards.map((card: CardType) => <CardElement key={card._id}\r\n                                                                   card={card}\r\n                                                                   updateCard={changeCard}\r\n                                                                   removeCard={removeCard}/>)\r\n    return (\r\n        <>\r\n            <div className={s.cardsPage}>\r\n                <div>\r\n                    <h4> AVAILABLE CARDS </h4>\r\n                </div>\r\n                <div className={s.cardsBlock}>\r\n                    {mappedCards}\r\n                </div>\r\n                <div className={s.search}>\r\n                    <UniversalButton onClick={onSearch}>Search</UniversalButton>\r\n                    <UniversalButton onClick={onAddCard}>Add\r\n                        Card</UniversalButton>\r\n                </div>\r\n            </div>\r\n            <ModalForAddCards active={activeModalAdd}\r\n                              setActive={setActiveModalAdd}\r\n                              addCardHandler={addCardHandler}\r\n                              setNewQuestionCard={setNewQuestionCard}\r\n                              setNewAnswerCard={setNewAnswerCard}\r\n                              setTypeNewCard={setTypeNewCard}/>\r\n        </>\r\n    )\r\n})\r\n","import {CardType} from '../../06-Cards/cards-reducer';\r\nimport React from 'react';\r\nimport Button from '../../../03-Components/Button/Button';\r\nimport {UniversalButton} from '../../../03-Components/Button/FormButton/UniversalButton';\r\n\r\ntype LearnCardElementPropsType = {\r\n    card: CardType,\r\n    checked: boolean,\r\n    setIsChecked: (value: boolean) => void\r\n    onNextCard: (value: number) => void\r\n    grades: string[]\r\n}\r\n\r\nexport const LearnCardElement: React.FC<LearnCardElementPropsType> = (\r\n    {\r\n        card,\r\n        checked,\r\n        setIsChecked,\r\n        onNextCard,\r\n        grades\r\n    }\r\n) => {\r\n\r\n    const nextCard = (value: number) => {\r\n        onNextCard(value)\r\n    }\r\n\r\n    const mappedButton = grades.map((el, i) => (\r\n        <Button key={i}\r\n                onClick={(e) => nextCard(i + 1)}>{el}</Button>\r\n    ))\r\n\r\n    return (\r\n        <div>\r\n            <h5>QUESTION</h5>\r\n            <h4>{card.question}</h4>\r\n            <p>ID карты: {card._id}</p>\r\n            <div>\r\n                {\r\n                    !checked && <UniversalButton onClick={(e) => setIsChecked(true)}>CHECK</UniversalButton>\r\n                }\r\n            </div>\r\n            <div>\r\n                {\r\n                    checked && (\r\n                        <div>\r\n                            <hr/>\r\n                            <h4>Answer: {card.answer}</h4>\r\n                            <p>Type: {card.type}</p>\r\n                            <p>Grade: {card.grade}</p>\r\n                            <div>\r\n                                {\r\n                                    mappedButton\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {CardType, getCards, sendGrade} from '../06-Cards/cards-reducer';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport ErrorSnackBar from '../../03-Components/ErrorSnackBar/ErrorSnackBar';\r\nimport {PATH} from '../../00-App/Routes/Routes';\r\nimport {LearnCardElement} from './LearnCardElement/LearnCardElement';\r\nimport {cardsSelectors} from '../06-Cards/00-index';\r\nimport {authSelectors} from '../01-Login/00-index';\r\nimport {appSelectors} from '../../00-App/00-index';\r\n\r\nimport s from './LearningPage.module.css'\r\n\r\nconst grades = ['no idea', 'forgot', 'think long', 'mix up', 'knew'];\r\n\r\nconst getRandomCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\nexport const LearningPage: React.FC = React.memo(() => {\r\n    const cards = useSelector<AppStoreType, CardType[]>(cardsSelectors.selectorCards)\r\n    const isAuth = useSelector<AppStoreType, boolean>(authSelectors.selectorIsAuth)\r\n    const error = useSelector<AppStoreType, string | null>(appSelectors.selectorError)\r\n\r\n    const {id} = useParams<{ id: string }>();\r\n\r\n    const [firstCard, setFirstCard] = useState<boolean>(true)\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [card, setCard] = useState<CardType>({\r\n        _id: ''\r\n    } as CardType)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (firstCard) {\r\n            dispatch(getCards(id))\r\n            setFirstCard(false)\r\n        }\r\n        if (cards.length > 0) {\r\n            setCard(getRandomCard(cards))\r\n            return () => {\r\n                console.log('Learning Page clear effect ')\r\n            }\r\n        } else {\r\n\r\n        }\r\n    }, [cards, dispatch])\r\n\r\n    const onNextCard = useCallback((grade: number) => {\r\n        setIsChecked(false);\r\n        if (cards.length > 0) {\r\n            if(!card._id) {\r\n                console.log('error in useCallback')\r\n            }\r\n            dispatch(sendGrade(grade, card._id))\r\n            setCard(getRandomCard(cards))\r\n        } else {\r\n            alert(`Something bad 'onNextCard'`)\r\n        }\r\n    }, [cards, card])\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.pageContainer}>\r\n            {cards.length > 0 && <LearnCardElement card={card}\r\n                                                      grades={grades}\r\n                                                      checked={isChecked}\r\n                                                      setIsChecked={setIsChecked}\r\n                                                      onNextCard={onNextCard}/>\r\n            }\r\n            {error && <ErrorSnackBar errorMessage={error}/>}\r\n        </div>\r\n    )\r\n})\r\n","import React, {DetailedHTMLProps, HTMLAttributes, useEffect, useState} from 'react';\r\nimport {authSelectors} from '../02-Pages/01-Login/00-index';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from '../00-App/Routes/Routes';\r\nimport {appSelectors} from '../00-App/00-index';\r\nimport {setAppStatus} from '../00-App/app-reducer';\r\nimport {getAuthUserData} from '../02-Pages/01-Login/auth-reducer';\r\n\r\ntype DivPropsType = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\r\ntype AuthRedirectPagePropsType = DivPropsType & {}\r\n\r\nconst AuthRedirectPage: React.FC<AuthRedirectPagePropsType> = React.memo((\r\n    {\r\n        children,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const user = useSelector(authSelectors.selectorUserData);\r\n    const isLoggedIn = useSelector(authSelectors.selectorIsAuth);\r\n    const error = useSelector(appSelectors.selectorError);\r\n    const [firstRendering, setFirstRendering] = useState<boolean>(true);\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n    const [spin, setSpin] = useState<boolean>(user._id === '0');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (firstRendering) {\r\n            if (isLoggedIn || error) dispatch(setAppStatus({status: 'succeeded', error: null}));\r\n\r\n            if (user._id === '0') {\r\n                dispatch(getAuthUserData());\r\n            }\r\n            setFirstRendering(false); // + rerender\r\n        } else {\r\n            if (!redirect && ((spin && error) || (!spin && user._id === '0'))) {\r\n                setTimeout(() => setRedirect(true), 1500);\r\n            }\r\n            if (isLoggedIn && spin) setSpin(false);\r\n        }\r\n    }, [firstRendering, setFirstRendering, user._id, setRedirect, isLoggedIn, error,\r\n        dispatch, redirect, spin, setSpin]);\r\n\r\n    if (redirect) return <Redirect to={PATH.LOGIN}/>;\r\n    if (spin) return <div>spin... {error}</div>;\r\n\r\n    return (\r\n        <>\r\n            {/*<Log s={renderLog || \"rendering AuthRedirectPage\"}/>*/}\r\n            <div style={{width: '100%'}}>\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default AuthRedirectPage;\r\n","import React from 'react'\r\nimport {Preloader} from '../03-Components/Preloader/Preloader'\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: any) => {\r\n        let {...restProps} = props\r\n        return (\r\n            <React.Suspense fallback={<Preloader/>}>\r\n                <WrappedComponent {...restProps as WCP}/>\r\n            </React.Suspense>\r\n        )\r\n    }\r\n}\r\n","import React, {useState} from 'react'\r\nimport classnames from 'classnames'\r\nimport {Button} from '../Button/Button'\r\n\r\nimport s from './Paginator.module.css'\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    portionSize?: number\r\n}\r\n\r\nexport const Paginator: React.FC<PropsType> = React.memo((\r\n    {currentPage, onPageChanged, pageSize, totalItemsCount, portionSize = 10}\r\n) => {\r\n\r\n    const pageCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    const pages = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pageCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize + 1\r\n\r\n    const prevPortionNumberHandler = () => {\r\n        setPortionNumber(portionNumber - 1)\r\n    }\r\n\r\n    const nextPortionNumberHandler = () => setPortionNumber(portionNumber + 1)\r\n\r\n    return (\r\n        <div className={s.usersPageNumber}>\r\n            {portionNumber > 1\r\n            && <Button onClick={prevPortionNumberHandler}>PREV</Button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p, i) => {\r\n                    return <span key={`number_items${i}`}\r\n                                 className={classnames({\r\n                                     [s.selected]: currentPage === p\r\n                                 }, s.pageNumber)}\r\n                                 onClick={() => {\r\n                                     onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n            {portionCount > portionNumber\r\n            && <Button onClick={nextPortionNumberHandler}>NEXT</Button>}\r\n        </div>\r\n    )\r\n})\r\n","import * as React from 'react';\r\nimport {getTrackBackground, Range} from 'react-range';\r\n\r\ntype DoubleRangePropsType = {\r\n    range: Array<number>,\r\n    setRange: (newValues: Array<number>) => void\r\n}\r\n\r\nconst DoubleRange: React.FC<DoubleRangePropsType> = ({range, setRange, children}) => {\r\n\r\n    return (\r\n        <Range\r\n            values={range}\r\n            step={1}\r\n            min={0}\r\n            max={15}\r\n            onChange={values => setRange(values)}\r\n            renderTrack={({props, children}) => (\r\n                <div\r\n                    onMouseDown={props.onMouseDown}\r\n                    onTouchStart={props.onTouchStart}\r\n                    style={{\r\n                        ...props.style,\r\n                        height: '36px',\r\n                        display: 'flex',\r\n                        width: '95%',\r\n                        margin: '0px',\r\n                    }}\r\n                >\r\n                    <div\r\n                        ref={props.ref}\r\n                        style={{\r\n                            height: '5px',\r\n                            width: '100%',\r\n                            borderRadius: '4px',\r\n                            background: getTrackBackground({\r\n                                values: range,\r\n                                colors: ['#ccc', '#2d4052', '#ccc'],\r\n                                min: range[0],\r\n                                max: range[1]\r\n\r\n                            }),\r\n                            alignSelf: 'center'\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            renderThumb={({index, props, isDragged}) => (\r\n                <div\r\n                    {...props}\r\n                    style={{\r\n                        ...props.style,\r\n                        height: '12px',\r\n                        width: '12px',\r\n                        borderRadius: '1px',\r\n                        backgroundColor: '#FFF',\r\n                        boxShadow: '0px 2px 6px #AAA',\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            top: '-28px',\r\n                            color: '#fff',\r\n                            fontWeight: 'bold',\r\n                            fontSize: '14px',\r\n                            fontFamily: 'Arial,Helvetica Neue,Helvetica,sans-serif',\r\n                            padding: '4px',\r\n                            borderRadius: '4px',\r\n                            backgroundColor: '#2d4052'\r\n                        }}\r\n                    >\r\n                        {range[index].toFixed(0)}\r\n                    </div>\r\n                    <div style={{height: '16px', width: '5px', backgroundColor: isDragged ? '#2d4052' : '#CCC'}}/>\r\n                </div>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default DoubleRange","import React, {ChangeEvent} from 'react';\r\nimport {ModalWindow} from '../Modal';\r\nimport {Input} from '../../Input/Input';\r\nimport {UniversalButton} from '../../Button/FormButton/UniversalButton';\r\n\r\ntype ModalAddPropsType = {\r\n    active: boolean,\r\n    setActive: (active: boolean) => void\r\n    addPackHandler: () => void,\r\n    setNamePack: (e: string) => void,\r\n    setTypeNewPack: (e: string) => void\r\n}\r\n\r\nexport const ModalForAddPack: React.FC<ModalAddPropsType> = React.memo((\r\n    {\r\n        active,\r\n        setActive,\r\n        addPackHandler,\r\n        setNamePack,\r\n        setTypeNewPack\r\n    }\r\n) => {\r\n\r\n    const handlerForAddNamePack = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNamePack(e.currentTarget.value)\r\n\r\n    }\r\n    const handlerForAddTypeNewPack = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTypeNewPack(e.currentTarget.value)\r\n\r\n    }\r\n\r\n    const addCardHandlerCancel = () => {\r\n        setActive(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <ModalWindow active={active} setActive={setActive}>\r\n                <h4>ADD NEW PACK</h4>\r\n                <p>TITLE NEW PACK</p><Input type={'text'}\r\n                                            onChange={handlerForAddNamePack}\r\n                                            placeholder={'Write title here'}/>\r\n                <p>TYPE NEW PACK</p> <Input type={'text'}\r\n                                            onChange={handlerForAddTypeNewPack}\r\n                                            placeholder={'Write type of card pack here'}/>\r\n                <UniversalButton onClick={addPackHandler}>ADD</UniversalButton>\r\n                <UniversalButton onClick={addCardHandlerCancel}>CANCEL</UniversalButton>\r\n            </ModalWindow>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport {ModalWindow} from '../Modal';\r\nimport {Input} from '../../Input/Input';\r\nimport {UniversalButton} from '../../Button/FormButton/UniversalButton';\r\n\r\ntype ModalUpdatePropsType = {\r\n    active: boolean,\r\n    setActive: (active: boolean) => void,\r\n    setTitleCard: (t: string) => void,\r\n    updateModalHandler: () => void\r\n}\r\n\r\nexport const ModalForUpdateCardsPack: React.FC<ModalUpdatePropsType> = React.memo((\r\n    {\r\n        setActive,\r\n        active,\r\n        setTitleCard,\r\n        updateModalHandler\r\n    }\r\n) => {\r\n\r\n    const handlerForUpdateTitleCard = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitleCard(e.currentTarget.value)\r\n    }\r\n    const updateModalHandlerCancel = () => {\r\n        setActive(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <ModalWindow active={active} setActive={setActive}>\r\n                <h4>HERE YOU CAN CHANGE THIS PACK</h4>\r\n                <Input type={'text'} onChange={handlerForUpdateTitleCard}\r\n                       placeholder={'Write a new title for pack'}/>\r\n                <UniversalButton onClick={updateModalHandler}>Update</UniversalButton>\r\n                <UniversalButton onClick={updateModalHandlerCancel}>Cancel</UniversalButton>\r\n            </ModalWindow>\r\n        </div>\r\n    )\r\n})\r\n","import React, {useState} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {CardPacksType} from '../cardPacks-reducer';\r\nimport {PATH} from '../../../00-App/Routes/Routes';\r\nimport Button from '../../../03-Components/Button/Button';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../../00-App/store';\r\nimport {ModalForUpdateCardsPack} from '../../../03-Components/Modal/ModalForCards/ModalForUpdateCardsPack';\r\nimport {ModalForDelete} from '../../../03-Components/Modal/ModalForCards/ModalForDelete';\r\nimport {authSelectors} from '../../01-Login/00-index';\r\n\r\nimport s from './CardPacksElement.module.css'\r\n\r\ntype PropsType = {\r\n    pack: CardPacksType\r\n    updateCardPacks: (cardsPack: CardPacksType) => void\r\n    removeCardPacks: (id: string) => void\r\n}\r\n\r\nexport const CardPacksElement: React.FC<PropsType> = React.memo((\r\n    {\r\n        pack,\r\n        updateCardPacks,\r\n        removeCardPacks,\r\n    }) => {\r\n\r\n    const userId = useSelector<AppStoreType, string | undefined>(authSelectors.selectorUserId)\r\n\r\n    const [activeModalDelete, setActiveModalDelete] = useState<boolean>(false)\r\n    const [activeModalUpdate, setActiveModalUpdate] = useState<boolean>(false)\r\n    const [titleCard, setTitleCard] = useState<string>('')\r\n\r\n    const onUpdateHandler = () => {\r\n        setActiveModalUpdate(true)\r\n    }\r\n    const onRemoveHandler = () => {\r\n        setActiveModalDelete(true)\r\n    }\r\n    const deleteModalHandlerYes = () => {\r\n        removeCardPacks(pack._id)\r\n    }\r\n    const updateModalHandler = () => {\r\n        updateCardPacks && updateCardPacks({_id: pack._id, name: titleCard, type: 'bla-type'})\r\n        setActiveModalUpdate(false)\r\n        setTitleCard('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.course}>\r\n                <div className={s.coursePreview}>\r\n                    <h6>Title</h6>\r\n                    <h2>{pack.type}</h2>\r\n                    <NavLink to={PATH.CARDS + '/' + pack._id} activeClassName={s.active}>View all cards\r\n                        <i\r\n                            className={`${s.fas} ${s.faChevronRight}`}>\r\n                        </i>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.courseInfo}>\r\n                    <div className={s.progressContainer}>\r\n                        <h6>Cards count: {pack.cardsCount}</h6>\r\n                    </div>\r\n                    <h6>NAME</h6>\r\n                    <h2>{pack.name}</h2>\r\n                    <div className={s.btnWrapper}>\r\n                        {\r\n                            pack.user_id === userId\r\n                                ? <>\r\n                                    <Button onClick={onUpdateHandler}\r\n                                            className={s.btn}>Update\r\n                                    </Button>\r\n                                    <Button onClick={onRemoveHandler}\r\n                                            className={s.btn}>Delete\r\n                                    </Button>\r\n                                </>\r\n                                : ''\r\n                        }\r\n\r\n                        <NavLink to={PATH.LEARNING + '/' + pack._id}\r\n                                 className={s.btn}>Learn\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ModalForDelete active={activeModalDelete}\r\n                            setActive={setActiveModalDelete}\r\n                            deleteModalHandlerYes={deleteModalHandlerYes}/>\r\n            <ModalForUpdateCardsPack active={activeModalUpdate}\r\n                                     setActive={setActiveModalUpdate}\r\n                                     setTitleCard={setTitleCard}\r\n                                     updateModalHandler={updateModalHandler}/>\r\n        </>\r\n    )\r\n})\r\n","import {AppStoreType} from '../../00-App/store';\r\n\r\nexport const selectorCardPacks = (state: AppStoreType) => state.cardsPack.cardPacks\r\nexport const selectorFilter = (state: AppStoreType) => state.cardsPack.filter\r\nexport const selectorPacksTotalCount = (state: AppStoreType) => state.cardsPack.packsTotalCount\r\nexport const selectorCurrentPage = (state: AppStoreType) => state.cardsPack.currentPage\r\nexport const selectorPageSize = (state: AppStoreType) => state.cardsPack.pageSize\r\nexport const selectorEditMode = (state: AppStoreType) => state.cardsPack.showAll\r\n","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport s from './CardPacks.module.css'\r\nimport {\r\n    addCardPacks,\r\n    CardPacksFilterType,\r\n    CardPacksType,\r\n    deleteCardPacks,\r\n    getCardPacks,\r\n    showMode,\r\n    updateCardPacks\r\n} from './cardPacks-reducer';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {Paginator} from '../../03-Components/Paginator/Paginator';\r\nimport DoubleRange from '../../03-Components/DoubleRange/DoubleRange';\r\nimport {PATH} from '../../00-App/Routes/Routes';\r\nimport {ModalForAddPack} from '../../03-Components/Modal/ModalForPack/ModalForAddPack';\r\nimport {CardPacksElement} from './CardPaksElement/CardPacksElement';\r\nimport {UniversalButton} from '../../03-Components/Button/FormButton/UniversalButton';\r\nimport {Input} from '../../03-Components/Input/Input';\r\nimport {CheckBox} from '../../03-Components/Checkbox/CheckBox';\r\nimport {\r\n    selectorCardPacks,\r\n    selectorCurrentPage,\r\n    selectorEditMode,\r\n    selectorFilter,\r\n    selectorPacksTotalCount,\r\n    selectorPageSize\r\n} from './01-selectors';\r\nimport {selectorUserData} from '../01-Login/01-selectors';\r\nimport {authSelectors} from '../01-Login/00-index';\r\nimport {UserDataType} from '../01-Login/auth-reducer';\r\n\r\nexport const CardPacksPage: React.FC = React.memo(() => {\r\n\r\n    const isAuth = useSelector<AppStoreType, boolean>(authSelectors.selectorIsAuth)\r\n    const cardPacks = useSelector<AppStoreType, CardPacksType[]>(selectorCardPacks)\r\n\r\n    //filter data\r\n    const packsTotalCount = useSelector<AppStoreType, number>(selectorPacksTotalCount)\r\n    const filter = useSelector<AppStoreType, CardPacksFilterType>(selectorFilter)\r\n    const currentPage = useSelector<AppStoreType, number>(selectorCurrentPage)\r\n    const pageSize = useSelector<AppStoreType, number>(selectorPageSize)\r\n    const editMode = useSelector<AppStoreType, boolean>(selectorEditMode)\r\n\r\n    const userData = useSelector<AppStoreType, UserDataType | null>(selectorUserData)\r\n\r\n    //filter state\r\n    const [inputValue, setInputValue] = useState<string>('')\r\n    const [range, setRange] = useState([0, 15])\r\n\r\n    //modal\r\n    const [activeModalAdd, setActiveModalAdd] = useState<boolean>(false)\r\n    const [namePack, setNamePack] = useState<string>('')\r\n    const [typeNewPack, setTypeNewPack] = useState<string>('undefined')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onPageChanged = useCallback((currentPage: number) => {\r\n        dispatch(getCardPacks(currentPage, pageSize, filtered))\r\n    }, [currentPage])\r\n\r\n    const onSearch = () => dispatch(getCardPacks(currentPage, pageSize, filtered))\r\n    const showOwnPack = (e: ChangeEvent<HTMLInputElement>) => dispatch(showMode(e.target.checked))\r\n    const inputHandler = (e: ChangeEvent<HTMLInputElement>) => setInputValue(e.currentTarget.value)\r\n\r\n    const filtered: CardPacksFilterType = {\r\n        packName: inputValue,\r\n        min: range[0],\r\n        max: range[1],\r\n        userId: editMode && userData ? userData._id : ''\r\n    }\r\n\r\n    function genID(serverNum: number) {\r\n        return (serverNum + '' + (new Date).getTime());\r\n    }\r\n\r\n    const cardTestObj: CardPacksType = {\r\n        _id: genID(5),\r\n        name: namePack,\r\n        type: typeNewPack\r\n    }\r\n\r\n    const onAddCardPacks = () => {\r\n        setActiveModalAdd(true)\r\n    }\r\n    const addPackHandler = () => {\r\n        dispatch(addCardPacks(cardTestObj))\r\n        setActiveModalAdd(false)\r\n    }\r\n    const changeCardPacks = (cardsPack: CardPacksType) => {\r\n        dispatch(updateCardPacks(cardsPack))\r\n    }\r\n    const removeCardPacks = (_id: string) => {\r\n        dispatch(deleteCardPacks(_id))\r\n    }\r\n\r\n    const mappedPacks = cardPacks.map((p: CardPacksType) =>\r\n        <CardPacksElement key={p._id}\r\n                          pack={p}\r\n                          updateCardPacks={changeCardPacks}\r\n                          removeCardPacks={removeCardPacks}/>)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardPacks(currentPage, pageSize, filter))\r\n    }, [])\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dataForm}>\r\n                <div className={s.search}>\r\n                    <h4>FORM FOR SEARCH</h4>\r\n                    <DoubleRange range={range} setRange={setRange}/>\r\n                    <Input onChange={inputHandler} placeholder={'search...'}/>\r\n                    <CheckBox checked={editMode}\r\n                              onChange={showOwnPack}> Show only mine pack </CheckBox>\r\n                    <UniversalButton onClick={onSearch}>Search</UniversalButton>\r\n                    <UniversalButton onClick={onAddCardPacks}>Add new CardPack</UniversalButton>\r\n                </div>\r\n                <div className={s.cardsBlock}>\r\n                    <Paginator currentPage={currentPage}\r\n                               onPageChanged={onPageChanged}\r\n                               pageSize={pageSize}\r\n                               totalItemsCount={packsTotalCount}/>\r\n                    <div className={s.cardPacksTable}>\r\n                        {\r\n                            mappedPacks\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ModalForAddPack active={activeModalAdd}\r\n                             setActive={setActiveModalAdd}\r\n                             addPackHandler={addPackHandler}\r\n                             setNamePack={setNamePack}\r\n                             setTypeNewPack={setTypeNewPack}/>\r\n        </>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {ProfilePage} from '../../02-Pages/04-Profile/ProfilePage';\r\nimport {Login} from '../../02-Pages/01-Login/Login';\r\nimport {Registration} from '../../02-Pages/02-Registration/Registration';\r\nimport {CardsPage} from '../../02-Pages/06-Cards/CardsPage';\r\nimport {LearningPage} from '../../02-Pages/07-Learning/LearningPage';\r\n\r\nimport s from './Routes.module.css'\r\nimport AuthRedirectPage from '../../helpers/AuthRedirectPage';\r\nimport {withSuspense} from '../../helpers/withSuspence';\r\nimport { CardPacksPage } from '../../02-Pages/05-CardPacks/CardPacksPage';\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REG: '/registration',\r\n    PASSWORD_POST: '/newPassword/:token?',\r\n    PASS_REC: '/passwordRecovery',\r\n    PROFILE: '/profile',\r\n    CARD_PACKS: '/card_packs',\r\n    CARDS: '/cards',\r\n    LEARNING: '/learning',\r\n    ALL_COMPONENTS: '/allComponents',\r\n}\r\n\r\nconst PasswordRecovery = React.lazy(() => import('../../02-Pages/03-PasswordRecovery/PasswordRecoveryPage'))\r\nconst ResetPassword = React.lazy(() => import('../../02-Pages/03-PasswordRecovery/ResetPasswordPage'))\r\nconst Page404 = React.lazy(() => import('../../02-Pages/08-Page404/Page404'))\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div className={s.app_container}>\r\n            <Switch>\r\n                <Route path='/' exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.LOGIN} exact render={() => <Login/>}/>\r\n                <Route path={PATH.REG} exact render={() => <Registration/>}/>\r\n                <Route path={PATH.PASSWORD_POST} exact render={withSuspense(ResetPassword)}/>\r\n                <Route path={PATH.PASS_REC} exact render={withSuspense(PasswordRecovery)}/>\r\n                <Route path={PATH.PROFILE} exact render={() => <AuthRedirectPage><ProfilePage/></AuthRedirectPage>}/>\r\n                <Route path={PATH.CARD_PACKS} exact render={() => <AuthRedirectPage><CardPacksPage/></AuthRedirectPage>}/>\r\n                <Route path={PATH.CARDS + '/:id'} exact render={() => <CardsPage/>}/>\r\n                <Route path={PATH.LEARNING + '/:id'} exact render={() => <AuthRedirectPage><LearningPage/></AuthRedirectPage>}/>\r\n                <Route path={'/404'} render={withSuspense(Page404)}/>\r\n                <Redirect from={'*'} to={'/404'}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2FakS\",\"logo\":\"Header_logo__3v1I3\",\"nav\":\"Header_nav__ziK64\",\"item\":\"Header_item__2c44x\",\"activeLink\":\"Header_activeLink__1StgI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pack\":\"CardPacksElement_pack__3bcmW\",\"course\":\"CardPacksElement_course__1yyp3\",\"coursePreview\":\"CardPacksElement_coursePreview__11y1a\",\"courseInfo\":\"CardPacksElement_courseInfo__vgD-c\",\"progressContainer\":\"CardPacksElement_progressContainer__3-4S4\",\"progress\":\"CardPacksElement_progress__3uNse\",\"progressText\":\"CardPacksElement_progressText__1smmP\",\"btnWrapper\":\"CardPacksElement_btnWrapper__3CB1l\",\"btn\":\"CardPacksElement_btn__1uzpi\"};","import {AppStoreType} from './store';\r\n\r\nexport const selectorError = (state: AppStoreType) => state.app.appState.error\r\nexport const selectorAppStatus = (state: AppStoreType) => state.app.appState.status\r\n","import {instance} from './api';\r\nimport {CardType} from '../02-Pages/06-Cards/cards-reducer';\r\n\r\nexport const cardsAPI = {\r\n\r\n    getCards(id: string) {\r\n        return instance.get<GetCardsResponseType>(`cards/card?cardsPack_id=${id ? id : ''}`)\r\n    },\r\n\r\n    createCard(card: CardType) {\r\n        return instance.post('cards/card', {card});\r\n    },\r\n\r\n    updateCard(card: CardType) {\r\n        return instance.put<UpdatedCardResponseType>('cards/card', {card});\r\n    },\r\n\r\n    deleteCard(cardId: string) {\r\n        return instance.delete<DeleteCardResponseType>(`cards/card/?id=${cardId}`);\r\n    },\r\n\r\n    sendGrade(grade: number, card_id: string) {\r\n        return instance.put<UpdateGradeCardResponse>('cards/grade', {grade, card_id});\r\n    },\r\n}\r\n\r\ntype GetCardsResponseType = {\r\n    cards: CardType[],\r\n    page: number,\r\n    pageCount: number,\r\n    cardsTotalCount: number,\r\n    packUserId: string,\r\n}\r\n\r\ntype DeleteCardResponseType = {\r\n    deletedCard: {\r\n        cardsPack_id: string\r\n    }\r\n}\r\n\r\ntype UpdatedCardResponseType = {\r\n    updatedCard: {\r\n        cardsPack_id: string\r\n    }\r\n}\r\n\r\ntype UpdateGradeCardResponse = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id: string\r\n    user_id: string\r\n    grade: number\r\n    shots: number\r\n}\r\n","import {Dispatch} from 'redux';\r\nimport {cardsAPI} from '../../01-API/04-cards-api';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {setAppStatus} from '../../00-App/app-reducer';\r\n\r\ntype ActionsType = ReturnType<typeof setCards>\r\n    | ReturnType<typeof setFilter>\r\n    | ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setGrade>\r\n    | ReturnType<typeof createCard>\r\n\r\nexport type CardType = {\r\n    answer: string,\r\n    question: string,\r\n    cardsPack_id: string,\r\n    grade: number,\r\n    rating: number,\r\n    shots?: number,\r\n    type: string,\r\n    user_id?: string,\r\n    created?: string,\r\n    updated?: string,\r\n    __v?: 0,\r\n    _id: string,\r\n}\r\n\r\nexport type CardsFilterType = {\r\n    packName: string\r\n    min: number\r\n    max: number\r\n}\r\n\r\nconst initialState = {\r\n    cards: [] as CardType[],\r\n    page: 1,\r\n    pageCount: 3,\r\n    cardsTotalCount: 5,\r\n    packUserId: '',\r\n    filter: {\r\n        packName: '',\r\n        min: 0,\r\n        max: 15,\r\n    } as CardsFilterType\r\n} as const\r\n\r\nexport type CardsInitialStateType = typeof initialState\r\n\r\nexport const cardsReducer = (state: CardsInitialStateType = initialState, actions: ActionsType): CardsInitialStateType => {\r\n    switch (actions.type) {\r\n        case 'CARDS/CARDS/SET-FILTER':\r\n            return {...state, filter: actions.payload.filter}\r\n        case 'CARDS/CARDS/SET-CARDS':\r\n            return {...state, cards: actions.cards}\r\n        case 'CARDS/CARDS/ADD-CARD':\r\n            return {...state, cards: [actions.newCard, ...state.cards]}\r\n        case 'CARDS/CARDS/SET-GRADE':\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(\r\n                    (card, i) => card._id === actions.payload.id\r\n                        ? {...card, grade: actions.payload.grade}\r\n                        : card\r\n                )\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCards = (cards: CardType[]) => ({type: 'CARDS/CARDS/SET-CARDS', cards} as const)\r\n\r\nexport const createCard = (newCard: CardType) => ({type: 'CARDS/CARDS/ADD-CARD', newCard} as const)\r\n\r\nexport const setFilter = (filter: CardsFilterType) => ({\r\n    type: 'CARDS/CARDS/SET-FILTER', payload: {\r\n        filter\r\n    }\r\n} as const)\r\n\r\nexport const setGrade = (grade: number, id: string) => ({\r\n    type: 'CARDS/CARDS/SET-GRADE',\r\n    payload: {\r\n        id,\r\n        grade\r\n    }\r\n} as const)\r\n\r\n\r\nexport const getCards = (cardsPackId: string) => async (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await cardsAPI.getCards(cardsPackId)\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(setCards(res.data.cards))\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addCard = (card: CardType) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        await cardsAPI.createCard(card)\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(getCards(card.cardsPack_id))\r\n        console.log(card)\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const updateCard = (card: CardType) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await cardsAPI.updateCard(card)\r\n        await dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        const packId = res.data.updatedCard.cardsPack_id\r\n        dispatch(getCards(packId))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console')\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const deleteCard = (id: string) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await cardsAPI.deleteCard(id)\r\n        await dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        const packId = res.data.deletedCard.cardsPack_id\r\n        dispatch(getCards(packId))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console')\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const sendGrade = (grade: number, card_id: string) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await cardsAPI.sendGrade(grade, card_id)\r\n        await dispatch(setAppStatus({status: 'succeeded', error: 'Sent'}))\r\n        const cardID = res.data._id\r\n        const newGrade = res.data.grade\r\n        dispatch(setGrade(newGrade, cardID))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus({status: 'succeeded', error: error}))\r\n    }\r\n}\r\n","import {instance} from './api';\r\nimport {CardPacksType} from '../02-Pages/05-CardPacks/cardPacks-reducer';\r\n\r\nexport const cardPacksAPI = {\r\n\r\n    getCardPacks(page: number, pageCount: number, packName: string = '', min: number, max: number, user_id: string) {\r\n        return instance.get<GetCardPacksResponseType>(`cards/pack?page=${page}&pageCount=${pageCount}&packName=${packName}&min=${min}&max=${max}&user_id=${user_id}`);\r\n    },\r\n\r\n    createCardsPack(cardsPack: CardPacksType) {\r\n        return instance.post('cards/pack', {cardsPack});\r\n    },\r\n\r\n    updateCardsPack(cardsPack: CardPacksType) {\r\n        return instance.put('cards/pack', {cardsPack});\r\n    },\r\n\r\n    deleteCardsPack(id: string) {\r\n        return instance.delete(`cards/pack?id=${id}`);\r\n    }\r\n}\r\n\r\ntype GetCardPacksResponseType = {\r\n    cardPacks: CardPacksType[],\r\n    page: number,\r\n    pageCount: number,\r\n    cardPacksTotalCount: number,\r\n    minCardsCount: number,\r\n    maxCardsCount: number,\r\n    token: string,\r\n    tokenDeathTime: string\r\n}\r\n\r\nexport type UpdateCardsPackType = {\r\n    _id: string,\r\n    name: string\r\n}\r\n","import {Dispatch} from 'redux';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {cardPacksAPI} from '../../01-API/03-cardPacks-api';\r\nimport {setAppStatus} from '../../00-App/app-reducer';\r\n\r\ntype ActionsType = ReturnType<typeof setCardPacks>\r\n    | ReturnType<typeof setFilter>\r\n    | ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setPacksTotalCount>\r\n    | ReturnType<typeof createCardPacks>\r\n    | ReturnType<typeof showMode>\r\n\r\nexport type CardPacksType = {\r\n    _id: string\r\n    user_id?: string\r\n    user_name?: string\r\n    private?: boolean\r\n    name: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    cardsCount?: number | undefined\r\n    type: string\r\n    rating?: number\r\n    created?: string | undefined\r\n    updated?: string\r\n    more_id?: string\r\n    __v?: number\r\n}\r\n\r\nexport type CardPacksFilterType = {\r\n    packName: string\r\n    min: number\r\n    max: number\r\n    userId: string,\r\n}\r\n\r\nconst initialState = {\r\n    cardPacks: [] as CardPacksType[],\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    packsTotalCount: 5,\r\n    showAll: false,\r\n    filter: {\r\n        packName: '',\r\n        min: 0,\r\n        max: 15,\r\n        userId: '',\r\n    } as CardPacksFilterType\r\n}\r\n\r\nexport type CardsPackInitialStateType = typeof initialState\r\n\r\nexport const cardPacksReducer = (state = initialState, actions: ActionsType): CardsPackInitialStateType => {\r\n    switch (actions.type) {\r\n        case 'CARDS/CARD-PACKS/SET-CURRENT-PAGE':\r\n            return {...state, currentPage: actions.currentPage};\r\n        case 'CARDS/CARD-PACKS/SET-PACKS-TOTAL-COUNT':\r\n            return {...state, packsTotalCount: actions.packsTotalCount};\r\n        case 'CARDS/CARD-PACKS/SET-FILTER':\r\n            return {...state, filter: actions.filter}\r\n        case 'CARDS/CARD-PACKS/SET-SHOW-MODE':\r\n            return {...state, showAll: actions.value}\r\n        case 'CARDS/CARD-PACKS/SET-CARDS':\r\n            return {...state, cardPacks: actions.cardPacks}\r\n        case 'CARDS/CARD-PACKS/ADD-CARDS':\r\n            return {...state, cardPacks: [actions.newPacks, ...state.cardPacks]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCardPacks = (cardPacks: CardPacksType[]) => ({type: 'CARDS/CARD-PACKS/SET-CARDS', cardPacks} as const)\r\nexport const createCardPacks = (newPacks: CardPacksType) => ({type: 'CARDS/CARD-PACKS/ADD-CARDS', newPacks} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({\r\n    type: 'CARDS/CARD-PACKS/SET-CURRENT-PAGE',\r\n    currentPage\r\n} as const)\r\nexport const setPacksTotalCount = (packsTotalCount: number) => ({\r\n    type: 'CARDS/CARD-PACKS/SET-PACKS-TOTAL-COUNT',\r\n    packsTotalCount\r\n} as const)\r\nexport const setFilter = (filter: CardPacksFilterType) => ({\r\n    type: 'CARDS/CARD-PACKS/SET-FILTER', filter\r\n} as const)\r\nexport const showMode = (value: boolean) => ({\r\n    type: 'CARDS/CARD-PACKS/SET-SHOW-MODE', value\r\n} as const)\r\n\r\nexport const getCardPacks = (requestPage: number, pageSize: number, filter: CardPacksFilterType) => async (dispatch: Dispatch<ActionsType>) => {\r\n\r\n    dispatch(setCurrentPage(requestPage))\r\n    dispatch(setFilter(filter))\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n\r\n    try {\r\n        const res = await cardPacksAPI.getCardPacks(requestPage, pageSize, filter.packName, filter.min, filter.max, filter.userId)\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(setCardPacks(res.data.cardPacks))\r\n        dispatch(setPacksTotalCount(res.data.cardPacksTotalCount))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const addCardPacks = (cardPacks: CardPacksType) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>, getState: () => AppStoreType) => {\r\n\r\n    const requestPage = getState().cardsPack.currentPage\r\n    const pageSize = getState().cardsPack.pageSize\r\n    const filter = getState().cardsPack.filter\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n\r\n    try {\r\n        await cardPacksAPI.createCardsPack(cardPacks)\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(getCardPacks(requestPage, pageSize, filter))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const updateCardPacks = (cardsPack: CardPacksType) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>, getState: () => AppStoreType) => {\r\n\r\n    const requestPage = getState().cardsPack.currentPage\r\n    const pageSize = getState().cardsPack.pageSize\r\n    const filter = getState().cardsPack.filter\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n\r\n    try {\r\n        await cardPacksAPI.updateCardsPack(cardsPack)\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(getCardPacks(requestPage, pageSize, filter))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const deleteCardPacks = (id: string) => async (dispatch: ThunkDispatch<AppStoreType, unknown, ActionsType>, getState: () => AppStoreType) => {\r\n\r\n    const requestPage = getState().cardsPack.currentPage\r\n    const pageSize = getState().cardsPack.pageSize\r\n    const filter = getState().cardsPack.filter\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n\r\n    const res = await cardPacksAPI.deleteCardsPack(id)\r\n    try {\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(getCardPacks(requestPage, pageSize, filter))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataForm\":\"CardPacks_dataForm__2h7k_\",\"search\":\"CardPacks_search__3SDty\",\"cardsBlock\":\"CardPacks_cardsBlock__2Cggx\",\"paginator\":\"CardPacks_paginator__GMph1\",\"cardPacksTable\":\"CardPacks_cardPacksTable__4E3za\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image_upload\":\"FileInput_image_upload__2gGVw\",\"input_label\":\"FileInput_input_label__2_CjG\",\"photoLoad\":\"FileInput_photoLoad__3Y0VZ\",\"btn_image_upload\":\"FileInput_btn_image_upload__2KDjm\",\"btn_label\":\"FileInput_btn_label__YEVcf\",\"sentBtn\":\"FileInput_sentBtn__2uPCs\",\"file_size\":\"FileInput_file_size__2Vo3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1vT5E\",\"modalActive\":\"Modal_modalActive__2HVS_\",\"modalContent\":\"Modal_modalContent__2-EGC\",\"btn\":\"Modal_btn__2DX2Q\",\"modalContentActive\":\"Modal_modalContentActive__3PgTV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"ErrorSnackBar_notification__20Xfe\",\"closeNotification\":\"ErrorSnackBar_closeNotification__2jz6m\",\"text\":\"ErrorSnackBar_text__lGBgd\",\"close\":\"ErrorSnackBar_close__1YK3x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_wrapper\":\"Input_input_wrapper__3RTZY\",\"inputLabel\":\"Input_inputLabel__1BFdX\",\"active\":\"Input_active__1l7Zm\",\"input\":\"Input_input__5kHwW\"};","import {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../00-App/store';\r\nimport {setAppStatus} from '../../00-App/app-reducer';\r\n\r\nimport s from './ErrorSnackBar.module.css'\r\n\r\ntype ErrorBarPropsType = {\r\n    errorMessage: string\r\n}\r\n\r\nconst ErrorSnackBar = (props: ErrorBarPropsType) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppStoreType, string | null>(state => state.app.appState.error)\r\n\r\n    const onClickHandler = () => dispatch(setAppStatus({status: 'idle', error: null}))\r\n\r\n    return (\r\n        <div className={error ? `${s.notification}` : `: ${s.closeNotification}`}>\r\n            <div className={s.text}> {props.errorMessage} </div>\r\n            <div className={`${s.close}`}>\r\n                <div className={s.text} onClick={onClickHandler}>X</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorSnackBar;\r\n","import React from 'react';\r\n\r\nimport s from './Preloader.module.css';\r\n\r\nexport const Preloader: React.FC = (props) => {\r\n\r\n    return (\r\n        <div className={s.fullOverlay}>\r\n            <div className={s.loader}>Loading...</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n","import {RegistrationRequestType, RegistrationResponseType} from '../02-Pages/02-Registration/registration-reducer';\r\nimport {instance} from './api';\r\n\r\nexport const registrationAPI = {\r\n\r\n    registration(dataReg: RegistrationRequestType) {\r\n        return instance.post<RegistrationResponseType>(`auth/register`, {...dataReg})\r\n    }\r\n}\r\n","import {Dispatch} from 'redux';\r\nimport {registrationAPI} from '../../01-API/01-regestration-api';\r\nimport {setAppStatus} from '../../00-App/app-reducer';\r\n\r\ntype ActionsType = ReturnType<typeof setRegistrationAC>\r\n    | ReturnType<typeof setRedirectProfileAC>\r\n    | ReturnType<typeof setAppStatus>\r\n\r\ntype InitialStateType = {\r\n    password: string\r\n    email: string\r\n    isRedirect: boolean\r\n}\r\nexport type RegistrationRequestType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type RegistrationResponseType = {\r\n    addedUser: {\r\n        created: string\r\n        email: string\r\n        isAdmin: boolean\r\n        name: string\r\n        publicCardPacksCount: number\r\n        rememberMe: boolean\r\n        updated: string\r\n        verified: boolean\r\n        __v: number\r\n        _id: string\r\n    }\r\n}\r\nexport type ErrorResponseType = {\r\n    response: {\r\n        data: {\r\n            emailRegExp?: {}\r\n            error: string\r\n            email?: string\r\n            in: string\r\n            isEmailValid?: boolean\r\n            isPassValid?: boolean\r\n            passwordRegExp?: string\r\n        }\r\n    }\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    password: '',\r\n    email: '',\r\n    isRedirect: false,\r\n}\r\n\r\nexport const registrationReducer = (state = initialState, actions: ActionsType): InitialStateType => {\r\n    switch (actions.type) {\r\n        case 'SET-REGISTRATION':\r\n            return {...state, ...actions.regData}\r\n        case 'SET-REDIRECT-PROFILE':\r\n            return {...state, isRedirect: actions.isRedirect}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setRegistrationAC = (regData: RegistrationRequestType) => ({type: 'SET-REGISTRATION', regData} as const)\r\n\r\nexport const setRedirectProfileAC = (isRedirect: boolean) => ({type: 'SET-REDIRECT-PROFILE', isRedirect} as const)\r\n\r\nexport const registrationTC = (regData: RegistrationRequestType) => async (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n    try {\r\n        const res = await registrationAPI.registration({...regData})\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        const dataAboutUser = res.data.addedUser\r\n        if (Object.keys(dataAboutUser).length === 10) {\r\n            dispatch(setRegistrationAC({...regData}))\r\n            dispatch(setRedirectProfileAC(true))\r\n            dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        }\r\n    } catch (error) {\r\n        dispatch(setAppStatus({status: 'loading', error: null}))\r\n        if (error.response.data.in === 'createUser') {\r\n            dispatch(setAppStatus({\r\n                status: 'failed',\r\n                error: error.response.data.error\r\n            }))\r\n        }\r\n        if (!error.response.data.isEmailValid) {\r\n            dispatch(setAppStatus({\r\n                status: 'failed',\r\n                error: error.response.data.error\r\n            }))\r\n        }\r\n        if (!error.response.data.isPassValid) {\r\n            error.response.data.passwordRegExp && dispatch(setAppStatus({\r\n                status: 'failed',\r\n                error: error.response.data.passwordRegExp\r\n            }))\r\n        }\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsPage\":\"Cards_cardsPage__2PilA\",\"search\":\"Cards_search__1Saro\",\"cardsBlock\":\"Cards_cardsBlock__34fu-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPageNumber\":\"Paginator_usersPageNumber__36MO-\",\"totalCount\":\"Paginator_totalCount__2wLJM\",\"pageNumber\":\"Paginator_pageNumber__3bi68\",\"selected\":\"Paginator_selected__AZe-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox_wrapper\":\"CheckBox_checkbox_wrapper__2BP1f\",\"label\":\"CheckBox_label__1Gbm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"UniversalButton_default__3YhBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullOverlay\":\"Preloader_fullOverlay__QQSnR\",\"loader\":\"Preloader_loader__2gIOq\",\"load1\":\"Preloader_load1__3DQMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoutForm\":\"Logout_logoutForm__1OgWV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__vd708\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardElement_card__3wPmS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"LearningPage_pageContainer__3CPEa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_container\":\"Routes_app_container__3Sl52\"};","import React from 'react';\r\nimport s from './Logout.module.css';\r\nimport {logout} from '../auth-reducer';\r\nimport {useDispatch} from 'react-redux';\r\n\r\ntype LoginPropsType = {}\r\n\r\nconst Logout: React.FC<LoginPropsType> = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let onclickHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <span className={s.logoutForm} onClick={onclickHandler}> LOGOUT</span>\r\n    )\r\n}\r\n\r\nexport default Logout;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './NavBar.module.css'\r\nimport Logout from '../../02-Pages/01-Login/logout/Logout';\r\nimport {PATH} from '../../00-App/Routes/Routes';\r\n\r\nexport const NavBar: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={style.header}>\r\n            <input type=\"checkbox\" className={style.openSidebarMenu} id=\"openSidebarMenu\"/>\r\n            <label htmlFor=\"openSidebarMenu\" className={style.sidebarIconToggle}>\r\n                <div className={`${style.spinner} ${style.diagonal} ${style.part1}`}/>\r\n                <div className={`${style.spinner} ${style.horizontal}`}/>\r\n                <div className={`${style.spinner} ${style.diagonal} ${style.part2}`}/>\r\n            </label>\r\n            <div className={style.sidebarMenu}>\r\n                <ul className={style.sidebarMenuInner}>\r\n                    <li><NavLink to={PATH.LOGIN}>LogIn</NavLink></li>\r\n                    <li><NavLink to={PATH.REG}>Registration</NavLink></li>\r\n                    <li><NavLink to={PATH.PASS_REC}>Password recovery</NavLink></li>\r\n                    <li><NavLink to={PATH.PASSWORD_POST}>New password</NavLink></li>\r\n                    <li><NavLink to={PATH.PROFILE}>Profile</NavLink></li>\r\n                    <li><NavLink to={PATH.CARD_PACKS}>Cards Pack</NavLink></li>\r\n                    <li><Logout/></li>\r\n                </ul>\r\n            </div>\r\n            <div className={`${style.main} ${style.center}`}>\r\n                <div className={style.mainInner}>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Logout from '../01-Login/logout/Logout';\r\nimport {NavBar} from '../../03-Components/NavBar/NavBar';\r\nimport {PATH} from '../../00-App/Routes/Routes';\r\n\r\nimport s from './Header.module.scss'\r\n\r\nexport const Header: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavBar/>\r\n            <div className={s.logo}>\r\n                Study Point\r\n                <span>.</span>\r\n            </div>\r\n            <nav className={s.nav}>\r\n               <span className={s.item}>\r\n                    <NavLink to={PATH.PROFILE} activeClassName={s.activeLink}>PROFILE</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to={PATH.CARD_PACKS} activeClassName={s.activeLink}>CARDS PACK</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to={PATH.LOGIN} activeClassName={s.activeLink}>SIGN IN</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to={PATH.REG} activeClassName={s.activeLink}>SIGN UP</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to={PATH.PASS_REC} activeClassName={s.activeLink}>RECOVERY PASSWORD</NavLink>\r\n                </span>\r\n                <span className={s.item}><Logout/></span>\r\n            </nav>\r\n        </div>\r\n    )\r\n})\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from './store';\r\nimport {Header} from '../02-Pages/00-Header/Header';\r\nimport Routes from './Routes/Routes';\r\nimport ErrorSnackBar from '../03-Components/ErrorSnackBar/ErrorSnackBar';\r\nimport {appSelectors} from './00-index';\r\nimport {getAuthUserData} from '../02-Pages/01-Login/auth-reducer';\r\nimport s from '../02-Pages/05-CardPacks/CardPacks.module.css';\r\nimport Preloader from '../03-Components/Preloader/Preloader';\r\nimport './App.css';\r\n\r\nexport const App: React.FC = () => {\r\n\r\n    const appStatus = useSelector<AppStoreType, string>(appSelectors.selectorAppStatus)\r\n    const finalStyle = appStatus === 'loading' ? `${s.fullOverlay} ${s.activeFullOverlay}` : s.fullOverlay\r\n\r\n    const error = useSelector<AppStoreType, string | null>(appSelectors.selectorError)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getAuthUserData())\r\n    }, []);\r\n\r\n    return (\r\n        <div className='App'>\r\n            <div className={finalStyle}></div>\r\n            <Header/>\r\n            <Routes/>\r\n            {error && <ErrorSnackBar errorMessage={error}/>}\r\n            {appStatus === 'loading' && <Preloader/>}\r\n        </div>\r\n    )\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {authReducer} from '../02-Pages/01-Login/auth-reducer';\r\nimport {registrationReducer} from '../02-Pages/02-Registration/registration-reducer';\r\nimport {appReducer} from './app-reducer';\r\nimport {cardPacksReducer} from '../02-Pages/05-CardPacks/cardPacks-reducer';\r\nimport {cardsReducer} from '../02-Pages/06-Cards/cards-reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    registration: registrationReducer,\r\n    app: appReducer,\r\n    cardsPack: cardPacksReducer,\r\n    cards: cardsReducer,\r\n})\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './00-App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {store} from './00-App/store';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}